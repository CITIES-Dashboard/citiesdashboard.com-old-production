{"version":3,"file":"static/js/349.7e62bb6e.chunk.js","mappings":"sPAcMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,gBAAGE,EAAH,EAAGA,MAAH,eAC9BC,OAA8B,QAAtBD,EAAME,QAAQC,MAAkB,mCACxCC,QAAS,OACTC,eAAgB,SAChBC,UAAWN,EAAMO,QAAQ,GACzBC,OAAQ,QACPR,EAAMS,YAAYC,KAAK,MAAQ,CAC5BC,WAAYX,EAAMO,SAAS,GAC3BK,YAAaZ,EAAMO,SAAS,QA0CpC,IAtCmB,WACf,IAAMM,EAAiB,8FACvB,OACI,UAAC,IAAD,YACI,SAAC,IAAD,CAAgBC,MAAMC,EAAAA,EAAAA,GAAiBC,EAAAA,GAAAA,OAEvC,SAAC,IAAD,CAAKC,SAAU,KAAMC,OAAQ,OAA7B,UACI,UAAC,IAAD,CAAOC,UAAW,EAAGC,GAAI,CAAEC,EAAG,GAA9B,WACI,SAAC,IAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,UACKC,EAAAA,EAAAA,IAAMR,EAAAA,GAAAA,EAA6B,CAChCS,QAASC,EAAAA,OAGjB,SAAC,IAAD,CAAWN,GAAI,CAAEO,GAAI,EAAGC,UAAW,UAAnC,UACI,UAAC,IAAD,CACIC,KAAI,UAAKhB,EAAL,aACJiB,QAAS,WACLC,EAAAA,EAA4BA,EAAAA,EAAAA,+BAEhCC,OAAO,SACPC,IAAI,aACJX,QAAQ,YACRY,KAAK,QART,WAUI,SAAC,IAAD,CAAYd,GAAI,CAAEe,SAAU,UAVhC,uCAeJ,SAACtC,EAAD,WACI,mBAAQuC,IAAG,UAAKvB,EAAL,0BAA6CwB,MAAM,OAAO7B,OAAO,OAAO8B,YAAY,IAA/F,oC,2LClDlBC,GAAczC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAOwC,EAAV,EAAUA,aAAV,MAA8B,CAC5DA,aAAcxC,EAAMO,QAAQiC,GAC5B,UAAW,CACPL,SAAU,WAEd,8CAA+C,CAC3CM,gBAAiBzC,EAAME,QAAQwC,iBAC/BC,cAAe,OACff,UAAW,QAEf,iCAAkC,CAC9BL,MAAOvB,EAAME,QAAQY,KAAK8B,UAC1BH,gBAAiBzC,EAAME,QAAQ2C,2BAEnC,qFACA,CACIC,WAAY,OACZL,gBAAiBzC,EAAME,QAAQ2C,2BAGnC,mBAAoB,CAChBE,iBAAkB,sBAuC1B,EAnCwB,SAACC,GACrB,IAAQC,EAAqCD,EAArCC,UAAWC,EAA0BF,EAA1BE,QAASV,EAAiBQ,EAAjBR,aAiB5B,OACI,SAACD,EAAD,CAAaC,aAAcA,EAA3B,UACI,SAAC,IAAD,CACIW,UAAW,QACXC,eAAc,iDAA4CF,GAC1DG,2BAA4B,CACxBC,QAASL,EAAUK,QACnBC,MAAON,EAAUM,MACjBC,IAAKP,EAAUO,KAEnBC,QAzBI,CACZpB,MAAO,OACPqB,eAAe,EACfC,cAAe,EACfC,cAAe,CACXC,UAAW,aACXC,SAAU,YACVC,YAAa,gBACbC,iBAAkB,qBAClBC,cAAe,kBACfC,WAAY,cACZC,UAAW,oB,mJC7BjBC,GAAkBtE,EAAAA,EAAAA,IAAOuE,EAAAA,EAAPvE,EAAqB,gBAAGE,EAAH,EAAGA,MAAOsE,EAAV,EAAUA,SAAV,MAA0B,CACnE/C,MAAOvB,EAAME,QAAQY,KAAK8B,UAC1B2B,gBAAiB,OACjB9B,gBAAiB6B,EAAWtE,EAAME,QAAQsE,WAAWC,QAAU,cAC/DC,UAAWJ,EAAWtE,EAAM2E,QAAU,OACtCC,WAAY5E,EAAM6E,gBAGhBC,GAAyBhF,EAAAA,EAAAA,IAAOiF,EAAAA,EAAPjF,EAA4B,gBAAGE,EAAH,EAAGA,MAAOsE,EAAV,EAAUA,SAAV,MAA0B,CACjFhE,UAAWgE,EAAWtE,EAAMO,QAAQ,GAAK,EACzCyE,cAAe,cACfC,YAAaX,EAAWtE,EAAMO,QAAQ,GAAK,EAC3C,wBAAyB,CACrBgB,MAAOvB,EAAME,QAAQY,KAAKoE,QAC1BC,eAAgB,YAChBP,WAAY5E,EAAM6E,YAClB,UAAW,CACPtD,MAAOvB,EAAME,QAAQgF,QAAQE,WAmCzC,EA9B0B,SAAC,GAAwB,IAGhBC,EAHNC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChC,GAAgCC,EAAAA,EAAAA,eAASC,GAAzC,eAAOnB,EAAP,KAAiBoB,EAAjB,KAQA,OACI,SAAC3F,EAAA,EAAD,WACI,UAACqE,EAAD,CACIE,SAAuB,WAAbA,EACVqB,UAVmBN,EAUa,SAVH,SAACO,EAAOC,GAC7CH,EAAYG,EAAaR,OAAQI,GAEjC1D,EAAAA,EAA4B8D,EAAa9D,EAAAA,EAAAA,iBAAmCA,EAAAA,EAAAA,sBAKxE,WAII,SAAC+C,EAAD,CAAwBR,SAAUA,EAAUwB,YAAY,SAACC,EAAA,EAAD,IAAoB,gBAAc,kBAAkBC,GAAG,iBAA/G,UACI,SAACC,EAAA,EAAD,CAASX,MAAOhB,EAAW,oBAAsB,kBAAjD,UACI,SAAC4B,EAAA,EAAD,CAAYC,UAAU,IAAI7E,QAAQ,QAAlC,SACKgE,SAIb,SAAC,IAAD,UACKC,U,6GCpDd,SAASa,EAAT,GAA6C,IAAZC,EAAW,EAAXA,QAC9BC,EAAgC,MAAnBD,EAAQnD,QAC3B,OACI,UAACqD,EAAA,EAAD,CACIzE,QAAS,WACLC,EAAAA,EAA4BA,EAAAA,EAAAA,aAEhCF,KAAMyE,EACA,GADU,iDAEgCD,EAAQnD,SACxDlB,OAAO,SACPC,IAAI,aACJuE,SAAUF,EAAYhF,QAAQ,YATlC,WAUI,SAACmF,EAAA,EAAD,IAVJ,OAYKH,EAAa,cAAgB,kB,2CCcpCI,EAAa,SAAC1D,GAClB,IAAQ2D,EAAgC3D,EAAhC2D,aAAiBC,GAAzB,OAAwC5D,EAAxC,GACA,OACE,SAACiD,EAAA,EAAD,CAASX,MAAOqB,EAAhB,UACE,SAACE,EAAA,GAAD,QACE3E,KAAK,SACD0E,OA8NZ,EAxNgB,SAAC,GAAyB,IAAD,IAAtBE,EAAsB,EAAtBA,gBACjB,GAAmEC,EAAAA,EAAAA,YAAWC,EAAAA,GAA9E,eAAUC,GAAV,WAA0BC,EAA1B,KAA4CC,EAA5C,KAEMnB,GAAOoB,EAAAA,EAAAA,MAAPpB,GACN,GAA8BR,EAAAA,EAAAA,UAAS,IAAvC,eAAOa,EAAP,KAAgBgB,EAAhB,KACA,GAA8B7B,EAAAA,EAAAA,WAAS,GAAvC,eAAO8B,EAAP,KAAgBC,EAAhB,KACA,GAAsBR,EAAAA,EAAAA,YAAWS,EAAAA,GAAjC,eAAOC,EAAP,KAAYC,GAAZ,KAEA,IAAwBX,EAAAA,EAAAA,YAAWY,EAAAA,GAA5BC,IAAP,gBA8BA,OA3BAC,EAAAA,EAAAA,YAAU,WAAYxB,EAAQf,QAAOwC,SAASxC,MAAT,UAAoBe,EAAQf,MAA5B,4BAIrCuC,EAAAA,EAAAA,YAAU,WAER,IAAIE,EAAe,GAEnBC,EAAAA,KAAS,SAAC3B,GACR,GAAIA,EAAQL,KAAOA,EAAI,CACrBqB,GAAW,UAAKhB,IAEhB,IADA,IAAI4B,EAAO,GACFC,EAAI,EAAGA,EAAI7B,EAAQ8B,OAAOC,OAAQF,IACzCD,EAAKC,GAAK,EAEZR,GAAOO,GACPV,GAAW,GAEXQ,EAAe1B,EAAQ8B,OAAOE,KAAI,SAACC,EAASC,GAAV,MAAqB,CAAEC,WAAYF,EAAQhD,MAAOmD,QAAQ,SAAD,OAAWF,EAAQ,WAIlHtB,EAAe,WACfE,EAAoBY,KAEnB,CAAC/B,EAAIiB,EAAgBE,KAGtB,8BACGG,IACC,UAACvH,EAAA,EAAD,CAAKsC,MAAM,OAAX,WACE,SAACtC,EAAA,EAAD,WACE,UAAC2I,EAAA,EAAD,CAAWtH,GAAI,CAAEuH,GAAI,EAAGC,GAAI,GAA5B,WAEE,SAACC,EAAA,EAAD,CAAgB/H,KAAMuF,EAAQf,SAE9B,UAACwD,EAAA,GAAD,CAAMC,WAAS,EAACxI,QAAS,EAAGa,GAAI,CAAEwH,GAAI,EAAGjH,IAAK,GAA9C,WACE,SAACmH,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAACtC,EAAD,CACEuC,MAAM,SAACC,EAAA,EAAD,IACNC,MAAO9C,EAAQ+C,MACfzC,aAAa,qBAEjB,SAACmC,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAACtC,EAAD,CACEuC,MAAM,SAACI,EAAA,EAAD,IACNF,MAAO9C,EAAQiD,QACf3C,aAAa,UACbR,UAAU,IACVtE,KAAI,iBAAYwE,EAAQiD,SACxBC,WAAS,OAGb,SAACT,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAACtC,EAAD,CACEuC,MAAM,SAACO,EAAA,EAAD,IACNL,MAAK,UAAK9C,EAAQoD,YAClB9C,aAAa,mBAEjB,SAACmC,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAACtC,EAAD,CACEuC,MAAM,SAACS,EAAA,EAAD,IACNP,MAAK,UAAK9C,EAAQ8B,OAAOC,OAApB,iBAAmC/B,EAAQ8B,OAAOC,OAAS,GAAK,KACrEzB,aAAa,mBACb7E,QAAS,YACP6H,EAAAA,EAAAA,IAAgB3I,EAAAA,GAAAA,IAChBe,EAAAA,EAA4BA,EAAAA,EAAAA,mBAC1B,CACE6H,eAAgB5I,EAAAA,GAAAA,GAChB6I,kBAAmB7I,EAAAA,QAAAA,WACnB8I,UAAW,eAKrB,SAAChB,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAACtC,EAAD,CACEuC,MAAM,SAACc,EAAA,EAAD,IACNZ,MAAK,WAAK,UAAAvB,GAAcvB,EAAQL,WAAtB,eAA2B4B,gBAAiB,IAAjD,oBAA+D,UAAAA,GAAcvB,EAAQL,WAAtB,eAA2B4B,eAAgB,EAAI,IAAM,IACzHjB,aAAa,qBACb7E,QAAS,YACP6H,EAAAA,EAAAA,IAAgB3I,EAAAA,GAAAA,IAChBe,EAAAA,EAA4BA,EAAAA,EAAAA,mBAC1B,CACE6H,eAAgB5I,EAAAA,GAAAA,GAChB6I,kBAAmB7I,EAAAA,GAAAA,WACnB8I,UAAW,kBAOvB,SAAC5D,EAAA,EAAD,CACE5E,QAAQ,QACRC,MAAM,iBACNH,GAAI,CAAEQ,UAAW,UAAWgH,GAAI,EAAGoB,GAAI,GACvCC,cAAY,EAJd,UAMGzI,EAAAA,EAAAA,IAAM6E,EAAQ6D,YAAa,CAC1BzI,QAASC,EAAAA,OAIb,SAAC0E,EAAD,CAAuBC,QAASA,KAEhC,SAAC,EAAD,CACEf,MAAM,cACNC,SACE,8BACGc,EAAQ8D,cAAc9B,KAAI,SAACC,EAASC,GAAV,OACzB,SAAC,EAAD,CAEEtF,UAAWqF,EACXpF,QAASmD,EAAQnD,QACjBV,aAAe+F,EAAQlC,EAAQ8D,cAAc/B,OAAS,EAAK,EAAI,GAH1DG,gBAYnB,SAACxI,EAAA,EAAD,CAAKiG,GAAIhF,EAAAA,GAAAA,GAAT,SACGqF,EAAQ8B,OAAOE,KAAI,SAACC,EAASC,GAAV,OAClB,SAACxI,EAAA,EAAD,CACEiG,GAAIkB,EAAiBqB,GAAOE,QAE5BhG,gBACE8F,EAAQ,GAAK,EAAI,4BAA8B,GAJnD,UAOE,UAACG,EAAA,EAAD,CACEtH,GAAI,CAAEuH,GAAI,EAAGC,GAAI,GACjBpI,OAAO,OACP4J,UAAWtD,IAAoBuD,EAAAA,EAAAA,KAAwB,OAAS,GAHlE,WAKE,UAACnE,EAAA,EAAD,CAAY5E,QAAQ,KAAKC,MAAM,eAA/B,UACGgH,EAAQ,EADX,KACgBD,EAAQhD,UAExB,SAACgF,EAAA,EAAD,CACErH,WAAS,QACPsH,WAAYhC,EACZrF,QAASmD,EAAQnD,SACdoF,MAGP,UAACvI,EAAA,EAAD,CAAKqB,GAAI,CAAEoJ,EAAG,GAAd,WACE,UAACtE,EAAA,EAAD,CACE5E,QAAQ,QACRC,MAAM,iBACNH,GAAI,CAAE4I,GAAI,GAHZ,UAKG1B,EAAQmC,WAAYjJ,EAAAA,EAAAA,IAAM8G,EAAQmC,SAAU,CAC3ChJ,QAASC,EAAAA,IAEVgJ,OAAOC,KAAKlD,GAAKc,IAAUA,GAC1BD,EAAQsC,WACRtC,EAAQsC,UAAUF,OAAOG,OAAOpD,GAAKc,IAClCuC,mBACHtJ,EAAAA,EAAAA,IACE8G,EAAQsC,UAAUF,OAAOG,OAAOpD,GAAKc,IAClCuC,iBAAkB,CACrBrJ,QAASC,EAAAA,QAIf,UAACwE,EAAA,EAAD,CAAY5E,QAAQ,UAAUC,MAAM,iBAApC,UACG+G,EAAQyC,YAAavJ,EAAAA,EAAAA,IAAM8G,EAAQyC,UAAW,CAC7CtJ,QAASC,EAAAA,IAEVgJ,OAAOC,KAAKlD,GAAKc,IAAUA,GAC1BD,EAAQsC,WACRtC,EAAQsC,UAAUF,OAAOG,OAAOpD,GAAKc,IAAQwC,YAC7CvJ,EAAAA,EAAAA,IACE8G,EAAQsC,UAAUF,OAAOG,OAAOpD,GAAKc,IAAQwC,UAAW,CACxDtJ,QAASC,EAAAA,cAjDd6G,SA4DX,SAACyC,EAAA,EAAD,KAEA,SAACjL,EAAA,EAAD,CAAKiG,GAAIhF,EAAAA,GAAAA,GAA4BI,GAAI,CAAEuH,GAAI,EAAGC,GAAI,GAAtD,UACE,SAACqC,EAAA,EAAD,CAAgBC,OAAQ7E,EAAQL,QAGlC,SAACgF,EAAA,EAAD,KAEA,SAACjL,EAAA,EAAD,CAAKiG,GAAIhF,EAAAA,GAAAA,GAAwBI,GAAI,CAAEuH,GAAI,EAAGC,GAAI,GAAlD,UACE,SAACuC,EAAA,EAAD","sources":["Pages/Home/GetInTouch.jsx","Graphs/SampleDataTable.jsx","Pages/Project/ExpandableSection.jsx","Pages/Project/DatasetDownloadButton.jsx","Pages/Project/Project.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { Typography, Container, Paper, Box, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport LaunchIcon from '@mui/icons-material/Launch';\n\nconst IFrameWrapper = styled(Box)(({ theme }) => ({\n    filter: theme.palette.mode == \"dark\" && \"invert(0.848) hue-rotate(180deg)\",\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(2),\n    height: '90vh',\n    [theme.breakpoints.down(\"md\")]: {\n        marginLeft: theme.spacing(-2),\n        marginRight: theme.spacing(-2),\n    },\n}));\n\nconst GetInTouch = () => {\n    const googleFormLink = 'https://docs.google.com/forms/d/e/1FAIpQLScnPA_ohsOvyZoO9QfjNk7shfXEyUGxOfxrpGzXq0VOSxjwbA/';\n    return (\n        <Container>\n            <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n\n            <Box maxWidth={\"md\"} margin={\"auto\"}>\n                <Paper elevation={2} sx={{ p: 3 }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        {parse(jsonData.getInTouch.content, {\n                            replace: replacePlainHTMLWithMuiComponents,\n                        })}\n                    </Typography>\n                    <Container sx={{ mt: 3, textAlign: \"center\" }}>\n                        <Button\n                            href={`${googleFormLink}/viewform`}\n                            onClick={() => {\n                                Tracking.sendEventAnalytics(Tracking.Events.openContactFormInExternalTab);\n                            }}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                            variant=\"contained\"\n                            size=\"small\"\n                        >\n                            <LaunchIcon sx={{ fontSize: \"1rem\" }} />\n                            &nbsp;\n                            OPEN FORM IN SEPARATE TAB\n                        </Button>\n                    </Container>\n                    <IFrameWrapper>\n                        <iframe src={`${googleFormLink}viewform?embedded=true`} width=\"100%\" height=\"100%\" frameBorder=\"0\">Loading...</iframe>\n                    </IFrameWrapper>\n                </Paper>\n            </Box>\n        </Container >\n    );\n};\n\nexport default GetInTouch;","// disable eslint for this file\n/* eslint-disable */\nimport { styled } from '@mui/material/styles';\nimport Chart from 'react-google-charts';\n\n// Styled component for the Google Table chart\nconst StyledTable = styled('div')(({ theme, marginBottom }) => ({\n    marginBottom: theme.spacing(marginBottom),\n    '& table': {\n        fontSize: '0.75rem',\n    },\n    '& .header-row, .frozen-column:first-of-type': {\n        backgroundColor: theme.palette.customBackground,\n        pointerEvents: 'none',\n        textAlign: 'left'\n    },\n    '& .table-row, & .odd-table-row': {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.customAlternateBackground,\n    },\n    '& .table-row .table-cell:first-of-type, & .odd-table-row .table-cell:first-of-type':\n    {\n        fontWeight: 'bold',\n        backgroundColor: theme.palette.customAlternateBackground,\n    },\n\n    '& .frozen-column': {\n        borderRightWidth: \"1px !important\"\n    }\n}));\n\nconst SampleDataTable = (props) => {\n    const { chartData, sheetId, marginBottom } = props;\n\n    const options = {\n        width: \"100%\",\n        sortAscending: true,\n        frozenColumns: 1,\n        cssClassNames: {\n            headerRow: 'header-row',\n            tableRow: 'table-row',\n            oddTableRow: 'odd-table-row',\n            selectedTableRow: 'selected-table-row',\n            hoverTableRow: 'hover-table-row',\n            headerCell: 'header-cell',\n            tableCell: 'table-cell',\n        }\n    };\n\n    return (\n        <StyledTable marginBottom={marginBottom} >\n            <Chart\n                chartType={'Table'}\n                spreadSheetUrl={`https://docs.google.com/spreadsheets/d/${sheetId}`}\n                spreadSheetQueryParameters={{\n                    headers: chartData.headers,\n                    query: chartData.query,\n                    gid: chartData.gid,\n                }}\n                options={options}\n            />\n        </StyledTable >\n    );\n\n};\n\nexport default SampleDataTable;","// disable eslint for this file\n/* eslint-disable */\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\n// import ReactGA from 'react-ga4';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n    color: theme.palette.text.secondary,\n    backgroundImage: 'none',\n    backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n    boxShadow: expanded ? theme.shadows : 'none',\n    transition: theme.transitions,\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n    marginTop: expanded ? theme.spacing(3) : 0,\n    flexDirection: 'row-reverse',\n    paddingLeft: expanded ? theme.spacing(1) : 0,\n    '& .MuiTypography-root': {\n        color: theme.palette.text.primary,\n        textDecoration: 'underline',\n        transition: theme.transitions,\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n    const [expanded, setExpanded] = useState(undefined);\n\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : undefined);\n\n        Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n    };\n\n    return (\n        <Box>\n            <StyledAccordion\n                expanded={expanded === \"panel1\"}\n                onChange={handleAccordionChange(\"panel1\")}\n            >\n                <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                    <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"}>\n                        <Typography component=\"a\" variant=\"body1\">\n                            {title}\n                        </Typography>\n                    </Tooltip>\n                </StyledAccordionSummary>\n                <MuiAccordionDetails>\n                    {content}\n                </MuiAccordionDetails>\n            </StyledAccordion>\n        </Box>\n    );\n}\n\nexport default ExpandableSection;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { Button } from '@mui/material';\nimport LinkIcon from '@mui/icons-material/Link';\nimport * as Tracking from '../../Utils/Tracking';\n\n// Download button: download raw dataset\n\nexport function DatasetDownloadButton({ project }) {\n    const isDisabled = project.sheetId == null ? true : false;\n    return (\n        <Button\n            onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.getDataset);\n            }}\n            href={isDisabled\n                ? ''\n                : `https://docs.google.com/spreadsheets/d/${project.sheetId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            disabled={isDisabled} variant=\"contained\">\n            <LinkIcon />\n            &nbsp;\n            {isDisabled ? 'COMING SOON' : 'FULL DATASET'}\n        </Button>\n    );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport SampleDataTable from '../../Graphs/SampleDataTable';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip } from '@mui/material';\n\nimport GetInTouch from '../Home/GetInTouch';\n\nimport ExpandableSection from './ExpandableSection';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport { DatasetDownloadButton } from './DatasetDownloadButton';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          <Box>\n            <Container sx={{ pt: 4, pb: 4 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                <Grid item>\n                  <CustomChip\n                    icon={<PersonIcon />}\n                    label={project.owner}\n                    tooltipTitle=\"Dataset Owner\" />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<PublishedWithChangesIcon />}\n                    label={`${project.lastUpdate}`}\n                    tooltipTitle=\"Last Update\" />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<CommentIcon />}\n                    label={`${commentCounts[project.id]?.commentCounts || \"0\"} Comment${commentCounts[project.id]?.commentCounts > 1 ? \"s\" : \"\"}`}\n                    tooltipTitle=\"Number of Comments\"\n                    onClick={() => {\n                      scrollToSection(jsonData.commentSection.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.commentSection.id,\n                          destination_label: jsonData.commentSection.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify', pb: 3, mb: 0 }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadButton project={project} />\n\n              <ExpandableSection\n                title=\"Sample Data\"\n                content={\n                  <>\n                    {project.rawDataTables.map((element, index) => (\n                      <SampleDataTable\n                        key={index}\n                        chartData={element}\n                        sheetId={project.sheetId}\n                        marginBottom={(index < project.rawDataTables.length - 1) ? 3 : 1}\n                      />\n                    ))}\n                  </>\n                }\n              />\n            </Container>\n          </Box>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <Box\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 == 0 ? 'customAlternateBackground' : ''\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n                  <ChartComponent\n                    chartData={{\n                      chartIndex: index,\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                  <Box sx={{ m: 3 }}>\n                    <Typography\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                      sx={{ mb: 2 }}\n                    >\n                      {element.subtitle && parse(element.subtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]]\n                            .subchartSubtitle, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {element.reference && parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].reference &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]].reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                  </Box>\n                </Container>\n              </Box>\n            ))}\n          </Box>\n\n\n          <Divider />\n\n          <Box id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </Box>\n\n          <Divider />\n\n          <Box id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n            <GetInTouch />\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["IFrameWrapper","styled","Box","theme","filter","palette","mode","display","justifyContent","marginTop","spacing","height","breakpoints","down","marginLeft","marginRight","googleFormLink","text","capitalizePhrase","jsonData","maxWidth","margin","elevation","sx","p","variant","color","parse","replace","replacePlainHTMLWithMuiComponents","mt","textAlign","href","onClick","Tracking","target","rel","size","fontSize","src","width","frameBorder","StyledTable","marginBottom","backgroundColor","customBackground","pointerEvents","secondary","customAlternateBackground","fontWeight","borderRightWidth","props","chartData","sheetId","chartType","spreadSheetUrl","spreadSheetQueryParameters","headers","query","gid","options","sortAscending","frozenColumns","cssClassNames","headerRow","tableRow","oddTableRow","selectedTableRow","hoverTableRow","headerCell","tableCell","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","transitions","StyledAccordionSummary","MuiAccordionSummary","flexDirection","paddingLeft","primary","textDecoration","main","panel","title","content","useState","undefined","setExpanded","onChange","event","isExpanded","expandIcon","ExpandMore","id","Tooltip","Typography","component","DatasetDownloadButton","project","isDisabled","Button","disabled","Link","CustomChip","tooltipTitle","otherProps","Chip","themePreference","useContext","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","loading","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCounts","useEffect","document","chartsTitles","data","temp","i","charts","length","map","element","index","chartTitle","chartID","Container","pt","pb","UppercaseTitle","Grid","container","item","icon","Person","label","owner","Email","contact","clickable","PublishedWithChanges","lastUpdate","BarChart","scrollToSection","destination_id","destination_label","origin_id","Comment","mb","gutterBottom","description","rawDataTables","className","ThemePreferences","ChartComponent","chartIndex","m","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider","CommentSection","pageID","GetInTouch"],"sourceRoot":""}