{"version":3,"file":"static/js/349.422f78bc.chunk.js","mappings":"sPAYMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,gBAAGE,EAAH,EAAGA,MAAH,eAChCC,OAA+B,SAAvBD,EAAME,QAAQC,MAAmB,mCACzCC,QAAS,OACTC,eAAgB,SAChBC,UAAWN,EAAMO,QAAQ,GACzBC,OAAQ,OACRC,UAAW,SACVT,EAAMU,YAAYC,KAAK,MAAQ,CAC9BC,WAAYZ,EAAMO,SAAS,GAC3BM,YAAab,EAAMO,SAAS,QAiDhC,IA7CA,WACE,IAAMO,EAAiB,8FACvB,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAgBC,MAAMC,EAAAA,EAAAA,GAAiBC,EAAAA,GAAAA,OAEvC,SAAC,IAAD,CAAKC,SAAS,KAAKC,OAAO,OAA1B,UACE,UAAC,IAAD,CAAOC,UAAW,EAAGC,GAAI,CAAEC,EAAG,GAA9B,WACE,SAAC,IAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,UACGC,EAAAA,EAAAA,IAAMR,EAAAA,GAAAA,EAA6B,CAClCS,QAASC,EAAAA,OAGb,SAAC,IAAD,CAAWN,GAAI,CAAEO,GAAI,EAAGC,UAAW,UAAnC,UACE,UAAC,IAAD,CACEC,KAAI,UAAKhB,EAAL,aACJiB,QAAS,WACPC,EAAAA,EAA4BA,EAAAA,EAAAA,+BAE9BC,OAAO,SACPC,IAAI,aACJX,QAAQ,YACRY,KAAK,QARP,WAUE,SAAC,IAAD,CAAYd,GAAI,CAAEe,SAAU,UAV9B,uCAeF,SAACvC,EAAD,WACE,mBACEwC,MAAM,0BACNC,IAAG,UAAKxB,EAAL,0BACHyB,MAAM,OACN/B,OAAO,OAJT,oC,+MCjDNgC,GAAc1C,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAOyC,EAAV,EAAUA,aAAV,MAA8B,CAC9DA,aAAczC,EAAMO,QAAQkC,GAC5B,UAAW,CACTL,SAAU,WAEZ,8CAA+C,CAC7CM,gBAAiB1C,EAAME,QAAQyC,iBAC/BC,cAAe,OACff,UAAW,QAEb,iCAAkC,CAChCL,MAAOxB,EAAME,QAAQa,KAAK8B,UAC1BH,gBAAiB1C,EAAME,QAAQ4C,2BAEjC,qFACA,CACEC,WAAY,OACZL,gBAAiB1C,EAAME,QAAQ4C,2BAGjC,mBAAoB,CAClBE,iBAAkB,sBAItB,SAASC,EAAgBC,GACvB,IAAQC,EAAqCD,EAArCC,UAAWC,EAA0BF,EAA1BE,QAASX,EAAiBS,EAAjBT,aAiB5B,OACE,SAACD,EAAD,CAAaC,aAAcA,EAA3B,UACE,SAAC,IAAD,CACEY,UAAU,QACVC,eAAc,iDAA4CF,GAC1DG,2BAA4B,CAC1BC,QAASL,EAAUK,QACnBC,MAAON,EAAUM,MACjBC,IAAKP,EAAUO,KAEjBC,QAzBU,CACdpB,MAAO,OACPqB,eAAe,EACfC,cAAe,EACfC,cAAe,CACbC,UAAW,aACXC,SAAU,YACVC,YAAa,gBACbC,iBAAkB,qBAClBC,cAAe,kBACfC,WAAY,cACZC,UAAW,mBAqBjB,OAAeC,EAAAA,EAAAA,MAAKrB,GAAiB,SAACsB,EAAWC,GAAZ,OAA0BC,GAAAA,CAAQF,EAAUpB,UAAWqB,EAAUrB,c,mJClDhGuB,GAAkB5E,EAAAA,EAAAA,IAAO6E,EAAAA,EAAP7E,EAAqB,gBAAGE,EAAH,EAAGA,MAAO4E,EAAV,EAAUA,SAAV,MAA0B,CACnEpD,MAAOxB,EAAME,QAAQa,KAAK8B,UAC1BgC,gBAAiB,OACjBnC,gBAAiBkC,EAAW5E,EAAME,QAAQ4E,WAAWC,QAAU,cAC/DC,UAAWJ,EAAW5E,EAAMiF,QAAU,OACtCC,WAAYlF,EAAMmF,gBAGhBC,GAAyBtF,EAAAA,EAAAA,IAAOuF,EAAAA,EAAPvF,EAA4B,gBAAGE,EAAH,EAAGA,MAAO4E,EAAV,EAAUA,SAAV,MAA0B,CACjFtE,UAAWsE,EAAW5E,EAAMO,QAAQ,GAAK,EACzC+E,cAAe,cACfC,YAAaX,EAAW5E,EAAMO,QAAQ,GAAK,EAC3C,wBAAyB,CACrBiB,MAAOxB,EAAME,QAAQa,KAAKyE,QAC1BC,eAAgB,YAChBP,WAAYlF,EAAMmF,YAClB,UAAW,CACP3D,MAAOxB,EAAME,QAAQsF,QAAQE,WAmCzC,EA9B0B,SAAC,GAAwB,IAGhBC,EAHNtD,EAAqB,EAArBA,MAAOuD,EAAc,EAAdA,QAChC,GAAgCC,EAAAA,EAAAA,eAASC,GAAzC,eAAOlB,EAAP,KAAiBmB,EAAjB,KAQA,OACI,SAAChG,EAAA,EAAD,WACI,UAAC2E,EAAD,CACIE,SAAuB,WAAbA,EACVoB,UAVmBL,EAUa,SAVH,SAACM,EAAOC,GAC7CH,EAAYG,EAAaP,OAAQG,GAEjC9D,EAAAA,EAA4BkE,EAAalE,EAAAA,EAAAA,iBAAmCA,EAAAA,EAAAA,sBAKxE,WAII,SAACoD,EAAD,CAAwBR,SAAUA,EAAUuB,YAAY,SAACC,EAAA,EAAD,IAAoB,gBAAc,kBAAkBC,GAAG,iBAA/G,UACI,SAACC,EAAA,EAAD,CAASjE,MAAOuC,EAAW,oBAAsB,kBAAjD,UACI,SAAC2B,EAAA,EAAD,CAAYC,UAAU,IAAIjF,QAAQ,QAAlC,SACKc,SAIb,SAAC,IAAD,UACKuD,U,6GCpDd,SAASa,EAAT,GAA6C,IAAZC,EAAW,EAAXA,QAC9BC,EAAgC,MAAnBD,EAAQtD,QAC3B,OACI,UAACwD,EAAA,EAAD,CACI7E,QAAS,WACLC,EAAAA,EAA4BA,EAAAA,EAAAA,aAEhCF,KAAM6E,EACA,GADU,iDAEgCD,EAAQtD,SACxDnB,OAAO,SACPC,IAAI,aACJ2E,SAAUF,EAAYpF,QAAQ,YATlC,WAUI,SAACuF,EAAA,EAAD,IAVJ,OAYKH,EAAa,cAAgB,kB,+DCiBpCI,GAAa,SAAC7D,GAClB,IAAQ8D,EAAgC9D,EAAhC8D,aAAiBC,GAAzB,OAAwC/D,EAAxC,IACA,OACE,SAACoD,EAAA,EAAD,CAASjE,MAAO2E,EAAhB,UACE,SAACE,EAAA,GAAD,QACE/E,KAAK,SACD8E,OAyOZ,GAnOgB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,gBACjB,GAAmEC,EAAAA,EAAAA,YAAWC,EAAAA,GAA9E,eAAUC,GAAV,WAA0BC,EAA1B,KAA4CC,EAA5C,KAEMnB,GAAOoB,EAAAA,EAAAA,MAAPpB,GACN,GAA8BR,EAAAA,EAAAA,UAAS,IAAvC,eAAOa,EAAP,KAAgBgB,EAAhB,KACA,GAA8B7B,EAAAA,EAAAA,WAAS,GAAvC,eAAO8B,EAAP,KAAgBC,EAAhB,KACA,GAAsBR,EAAAA,EAAAA,YAAWS,EAAAA,GAAjC,eAAOC,EAAP,KAAYC,EAAZ,KAEA,IAAwBX,EAAAA,EAAAA,YAAWY,EAAAA,GAA5BC,IAAP,gBACMC,GAAeD,GAAcvB,EAAQL,IAE3C,IAAqBe,EAAAA,EAAAA,YAAWe,EAAAA,GAC1BC,IADN,gBAC8B1B,EAAQL,IA8BtC,OA3BAgC,EAAAA,EAAAA,YAAU,WAAY3B,EAAQrE,QAAOiG,SAASjG,MAAT,UAAoBqE,EAAQrE,MAA5B,4BAIrCgG,EAAAA,EAAAA,YAAU,WAER,IAAIE,EAAe,GAEnBC,EAAAA,KAAS,SAAC9B,GACR,GAAIA,EAAQL,KAAOA,EAAI,CACrBqB,GAAW,UAAKhB,IAEhB,IADA,IAAI+B,EAAO,GACFC,EAAI,EAAGA,EAAIhC,EAAQiC,OAAOC,OAAQF,IACzCD,EAAKC,GAAK,EAEZX,EAAOU,GACPb,GAAW,GAEXW,EAAe7B,EAAQiC,OAAOE,KAAI,SAACC,EAASC,GAAV,MAAqB,CAAEC,WAAYF,EAAQzG,MAAO4G,QAAQ,SAAD,OAAWF,EAAQ,WAIlHzB,EAAe,WACfE,EAAoBe,KAEnB,CAAClC,EAAIiB,EAAgBE,KAGtB,8BACGG,IACC,UAAC5H,EAAA,EAAD,CAAKwC,MAAM,OAAX,WACE,SAAC2G,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAW9H,GAAI,CAAE+H,GAAI,EAAGC,GAAI,GAA5B,WAEE,SAACC,EAAA,EAAD,CAAgBvI,KAAM2F,EAAQrE,SAE9B,UAACkH,EAAA,GAAD,CAAMC,WAAS,EAACjJ,QAAS,EAAGc,GAAI,CAAEgI,GAAI,EAAGzH,IAAK,GAA9C,WACE,SAAC2H,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC1C,GAAD,CACE2C,MAAM,SAACC,EAAA,EAAD,IACNC,MAAOlD,EAAQmD,MACf7C,aAAa,qBAEjB,SAACuC,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC1C,GAAD,CACE2C,MAAM,SAACI,EAAA,EAAD,IACNF,MAAOlD,EAAQqD,QACf/C,aAAa,UACbR,UAAU,IACV1E,KAAI,iBAAY4E,EAAQqD,SACxBC,WAAS,OAIb,SAACT,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC1C,GAAD,CACE2C,MAAM,SAACO,EAAA,EAAD,IACNL,MAAK,UAAKlD,EAAQiC,OAAOC,OAApB,iBAAmClC,EAAQiC,OAAOC,OAAS,GAAK,KACrE5B,aAAa,mBACbjF,QAAS,YACPmI,EAAAA,EAAAA,IAAgBjJ,EAAAA,GAAAA,IAChBe,EAAAA,EAA4BA,EAAAA,EAAAA,mBAC1B,CACEmI,eAAgBlJ,EAAAA,GAAAA,GAChBmJ,kBAAmBnJ,EAAAA,QAAAA,WACnBoJ,UAAW,cAOnBjC,KACA,SAACmB,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC1C,GAAD,CACE2C,MAAM,SAACY,EAAA,EAAD,IACNV,MAAK,uBAAkBxB,IACvBpB,aAAa,kBAIF,MAAhBkB,KACC,SAACqB,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC1C,GAAD,CACE2C,MAAM,SAACa,EAAA,EAAD,IACNX,MAAK,UAAK1B,GAAL,mBAA4BD,GAAcvB,EAAQL,IAAM,EAAI,IAAM,IACvEW,aAAa,qBACbjF,QAAS,YACPmI,EAAAA,EAAAA,IAAgBjJ,EAAAA,GAAAA,IAChBe,EAAAA,EAA4BA,EAAAA,EAAAA,mBAC1B,CACEmI,eAAgBlJ,EAAAA,GAAAA,GAChBmJ,kBAAmBnJ,EAAAA,GAAAA,WACnBoJ,UAAW,kBAOzB,SAAC9D,EAAA,EAAD,CACEhF,QAAQ,QACRC,MAAM,iBACNH,GAAI,CAAEQ,UAAW,UAAWwH,GAAI,EAAGmB,GAAI,GACvCC,cAAY,EAJd,UAMGhJ,EAAAA,EAAAA,IAAMiF,EAAQgE,YAAa,CAC1BhJ,QAASC,EAAAA,OAIb,SAAC8E,EAAD,CAAuBC,QAASA,KAEhC,SAAC,EAAD,CACErE,MAAM,cACNuD,SACE,8BACGc,EAAQiE,cAAc9B,KAAI,SAACC,EAASC,GAAV,OACzB,SAAC,EAAD,CAEE5F,UAAW2F,EACX1F,QAASsD,EAAQtD,QACjBX,aAAesG,EAAQrC,EAAQiE,cAAc/B,OAAS,EAAK,EAAI,GAH1DG,gBAYnB,SAAChJ,EAAA,EAAD,CAAKsG,GAAIpF,EAAAA,GAAAA,GAAT,SACGyF,EAAQiC,OAAOE,KAAI,SAACC,EAASC,GAAV,OAClB,SAACG,EAAA,EAAD,CACE7C,GAAIkB,EAAiBwB,GAAOE,QAE5BvG,gBACEqG,EAAQ,GAAK,EAAI,4BAA8B,GAJnD,UAOE,UAACI,EAAA,EAAD,CACE9H,GAAI,CAAE+H,GAAI,EAAGC,GAAI,GACjB7I,OAAO,OACPoK,UAAWzD,IAAoB0D,EAAAA,EAAAA,KAAwB,OAAS,GAHlE,WAKE,UAACtE,EAAA,EAAD,CAAYhF,QAAQ,KAAKC,MAAM,eAA/B,UACGuH,EAAQ,EADX,KACgBD,EAAQzG,UAExB,SAACyI,EAAA,EAAD,CACE3H,WAAS,QACP4H,WAAYhC,EACZ3F,QAASsD,EAAQtD,SACd0F,MAGP,UAAC/I,EAAA,EAAD,CAAKsB,GAAI,CAAE2J,EAAG,GAAd,WACE,UAACzE,EAAA,EAAD,CACEhF,QAAQ,QACRC,MAAM,iBACNH,GAAI,CAAEmJ,GAAI,GAHZ,UAKG1B,EAAQmC,WAAYxJ,EAAAA,EAAAA,IAAMqH,EAAQmC,SAAU,CAC3CvJ,QAASC,EAAAA,IAEVuJ,OAAOC,KAAKrD,GAAKiB,IAAUA,GAC1BD,EAAQsC,WACRtC,EAAQsC,UAAUF,OAAOG,OAAOvD,GAAKiB,IAClCuC,mBACH7J,EAAAA,EAAAA,IACEqH,EAAQsC,UAAUF,OAAOG,OAAOvD,GAAKiB,IAClCuC,iBAAkB,CACrB5J,QAASC,EAAAA,QAIf,UAAC4E,EAAA,EAAD,CAAYhF,QAAQ,UAAUC,MAAM,iBAApC,UACGsH,EAAQyC,YAAa9J,EAAAA,EAAAA,IAAMqH,EAAQyC,UAAW,CAC7C7J,QAASC,EAAAA,IAEVuJ,OAAOC,KAAKrD,GAAKiB,IAAUA,GAC1BD,EAAQsC,WACRtC,EAAQsC,UAAUF,OAAOG,OAAOvD,GAAKiB,IAAQwC,YAC7C9J,EAAAA,EAAAA,IACEqH,EAAQsC,UAAUF,OAAOG,OAAOvD,GAAKiB,IAAQwC,UAAW,CACxD7J,QAASC,EAAAA,cAjDdoH,SA4DX,SAACyC,EAAA,EAAD,KAEA,SAACtC,EAAA,EAAD,CAAc7C,GAAIpF,EAAAA,GAAAA,GAA4BI,GAAI,CAAE+H,GAAI,EAAGC,GAAI,GAA/D,UACE,SAACoC,EAAA,EAAD,CAAgBC,OAAQhF,EAAQL,QAGlC,SAACmF,EAAA,EAAD,KAEA,SAACtC,EAAA,EAAD,CAAc7C,GAAIpF,EAAAA,GAAAA,GAAwBI,GAAI,CAAE+H,GAAI,EAAGC,GAAI,GAA3D,UACE,SAACsC,EAAA,EAAD","sources":["Pages/Home/GetInTouch.jsx","Graphs/SampleDataTable.jsx","Pages/Project/ExpandableSection.jsx","Pages/Project/DatasetDownloadButton.jsx","Pages/Project/Project.jsx"],"sourcesContent":["import { Typography, Container, Paper, Box, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport parse from 'html-react-parser';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst IFrameWrapper = styled(Box)(({ theme }) => ({\n  filter: theme.palette.mode === 'dark' && 'invert(0.848) hue-rotate(180deg)',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: theme.spacing(2),\n  height: '90vh',\n  maxHeight: '980px',\n  [theme.breakpoints.down('md')]: {\n    marginLeft: theme.spacing(-2),\n    marginRight: theme.spacing(-2),\n  },\n}));\n\nfunction GetInTouch() {\n  const googleFormLink = 'https://docs.google.com/forms/d/e/1FAIpQLScnPA_ohsOvyZoO9QfjNk7shfXEyUGxOfxrpGzXq0VOSxjwbA/';\n  return (\n    <Container>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n\n      <Box maxWidth=\"md\" margin=\"auto\">\n        <Paper elevation={2} sx={{ p: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {parse(jsonData.getInTouch.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <Container sx={{ mt: 3, textAlign: 'center' }}>\n            <Button\n              href={`${googleFormLink}/viewform`}\n              onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.openContactFormInExternalTab);\n              }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"contained\"\n              size=\"small\"\n            >\n              <LaunchIcon sx={{ fontSize: '1rem' }} />\n              &nbsp;\n              OPEN FORM IN SEPARATE TAB\n            </Button>\n          </Container>\n          <IFrameWrapper>\n            <iframe\n              title=\"Survey Google Form Link\"\n              src={`${googleFormLink}viewform?embedded=true`}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              Loading...\n            </iframe>\n          </IFrameWrapper>\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default GetInTouch;\n","import { memo } from 'react';\nimport isEqual from 'lodash.isequal';\nimport { styled } from '@mui/material/styles';\nimport Chart from 'react-google-charts';\n\n// Styled component for the Google Table chart\nconst StyledTable = styled('div')(({ theme, marginBottom }) => ({\n  marginBottom: theme.spacing(marginBottom),\n  '& table': {\n    fontSize: '0.75rem',\n  },\n  '& .header-row, .frozen-column:first-of-type': {\n    backgroundColor: theme.palette.customBackground,\n    pointerEvents: 'none',\n    textAlign: 'left'\n  },\n  '& .table-row, & .odd-table-row': {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.customAlternateBackground,\n  },\n  '& .table-row .table-cell:first-of-type, & .odd-table-row .table-cell:first-of-type':\n  {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.customAlternateBackground,\n  },\n\n  '& .frozen-column': {\n    borderRightWidth: '1px !important'\n  }\n}));\n\nfunction SampleDataTable(props) {\n  const { chartData, sheetId, marginBottom } = props;\n\n  const options = {\n    width: '100%',\n    sortAscending: true,\n    frozenColumns: 1,\n    cssClassNames: {\n      headerRow: 'header-row',\n      tableRow: 'table-row',\n      oddTableRow: 'odd-table-row',\n      selectedTableRow: 'selected-table-row',\n      hoverTableRow: 'hover-table-row',\n      headerCell: 'header-cell',\n      tableCell: 'table-cell',\n    }\n  };\n\n  return (\n    <StyledTable marginBottom={marginBottom}>\n      <Chart\n        chartType=\"Table\"\n        spreadSheetUrl={`https://docs.google.com/spreadsheets/d/${sheetId}`}\n        spreadSheetQueryParameters={{\n          headers: chartData.headers,\n          query: chartData.query,\n          gid: chartData.gid,\n        }}\n        options={options}\n      />\n    </StyledTable>\n  );\n}\n\n// eslint-disable-next-line max-len\nexport default memo(SampleDataTable, (prevProps, nextProps) => isEqual(prevProps.chartData, nextProps.chartData));\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\n// import ReactGA from 'react-ga4';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n    color: theme.palette.text.secondary,\n    backgroundImage: 'none',\n    backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n    boxShadow: expanded ? theme.shadows : 'none',\n    transition: theme.transitions,\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n    marginTop: expanded ? theme.spacing(3) : 0,\n    flexDirection: 'row-reverse',\n    paddingLeft: expanded ? theme.spacing(1) : 0,\n    '& .MuiTypography-root': {\n        color: theme.palette.text.primary,\n        textDecoration: 'underline',\n        transition: theme.transitions,\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n    const [expanded, setExpanded] = useState(undefined);\n\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : undefined);\n\n        Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n    };\n\n    return (\n        <Box>\n            <StyledAccordion\n                expanded={expanded === \"panel1\"}\n                onChange={handleAccordionChange(\"panel1\")}\n            >\n                <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                    <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"}>\n                        <Typography component=\"a\" variant=\"body1\">\n                            {title}\n                        </Typography>\n                    </Tooltip>\n                </StyledAccordionSummary>\n                <MuiAccordionDetails>\n                    {content}\n                </MuiAccordionDetails>\n            </StyledAccordion>\n        </Box>\n    );\n}\n\nexport default ExpandableSection;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { Button } from '@mui/material';\nimport LinkIcon from '@mui/icons-material/Link';\nimport * as Tracking from '../../Utils/Tracking';\n\n// Download button: download raw dataset\n\nexport function DatasetDownloadButton({ project }) {\n    const isDisabled = project.sheetId == null ? true : false;\n    return (\n        <Button\n            onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.getDataset);\n            }}\n            href={isDisabled\n                ? ''\n                : `https://docs.google.com/spreadsheets/d/${project.sheetId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            disabled={isDisabled} variant=\"contained\">\n            <LinkIcon />\n            &nbsp;\n            {isDisabled ? 'COMING SOON' : 'FULL DATASET'}\n        </Button>\n    );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport SampleDataTable from '../../Graphs/SampleDataTable';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip, styled } from '@mui/material';\n\nimport GetInTouch from '../Home/GetInTouch';\n\nimport ExpandableSection from './ExpandableSection';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport { DatasetDownloadButton } from './DatasetDownloadButton';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\nimport { SheetsDataContext } from '../../ContextProviders/SheetsDataContext';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n  const commentCount = commentCounts[project.id];\n\n  const [sheetsData] = useContext(SheetsDataContext);\n  const lastUpdate = sheetsData[project.id];\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          <FullWidthBox>\n            <Container sx={{ pt: 4, pb: 4 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                <Grid item>\n                  <CustomChip\n                    icon={<PersonIcon />}\n                    label={project.owner}\n                    tooltipTitle=\"Dataset Owner\" />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n\n                {\n                  lastUpdate &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<PublishedWithChangesIcon />}\n                      label={`Last update: ${lastUpdate}`}\n                      tooltipTitle=\"Last Update\" />\n                  </Grid>\n                }\n\n                {commentCount != null &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<CommentIcon />}\n                      label={`${commentCount} Comment${commentCounts[project.id] > 1 ? \"s\" : \"\"}`}\n                      tooltipTitle=\"Number of Comments\"\n                      onClick={() => {\n                        scrollToSection(jsonData.commentSection.id);\n                        Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                          {\n                            destination_id: jsonData.commentSection.id,\n                            destination_label: jsonData.commentSection.toString(),\n                            origin_id: 'chip'\n                          })\n                      }}\n                    />\n                  </Grid>}\n              </Grid>\n\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify', pb: 3, mb: 0 }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadButton project={project} />\n\n              <ExpandableSection\n                title=\"Sample Data\"\n                content={\n                  <>\n                    {project.rawDataTables.map((element, index) => (\n                      <SampleDataTable\n                        key={index}\n                        chartData={element}\n                        sheetId={project.sheetId}\n                        marginBottom={(index < project.rawDataTables.length - 1) ? 3 : 1}\n                      />\n                    ))}\n                  </>\n                }\n              />\n            </Container>\n          </FullWidthBox>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <FullWidthBox\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 == 0 ? 'customAlternateBackground' : ''\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n                  <ChartComponent\n                    chartData={{\n                      chartIndex: index,\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                  <Box sx={{ m: 3 }}>\n                    <Typography\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                      sx={{ mb: 2 }}\n                    >\n                      {element.subtitle && parse(element.subtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]]\n                            .subchartSubtitle, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {element.reference && parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].reference &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]].reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                  </Box>\n                </Container>\n              </FullWidthBox>\n            ))}\n          </Box>\n\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </FullWidthBox>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n            <GetInTouch />\n          </FullWidthBox>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["IFrameWrapper","styled","Box","theme","filter","palette","mode","display","justifyContent","marginTop","spacing","height","maxHeight","breakpoints","down","marginLeft","marginRight","googleFormLink","text","capitalizePhrase","jsonData","maxWidth","margin","elevation","sx","p","variant","color","parse","replace","replacePlainHTMLWithMuiComponents","mt","textAlign","href","onClick","Tracking","target","rel","size","fontSize","title","src","width","StyledTable","marginBottom","backgroundColor","customBackground","pointerEvents","secondary","customAlternateBackground","fontWeight","borderRightWidth","SampleDataTable","props","chartData","sheetId","chartType","spreadSheetUrl","spreadSheetQueryParameters","headers","query","gid","options","sortAscending","frozenColumns","cssClassNames","headerRow","tableRow","oddTableRow","selectedTableRow","hoverTableRow","headerCell","tableCell","memo","prevProps","nextProps","isEqual","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","transitions","StyledAccordionSummary","MuiAccordionSummary","flexDirection","paddingLeft","primary","textDecoration","main","panel","content","useState","undefined","setExpanded","onChange","event","isExpanded","expandIcon","ExpandMore","id","Tooltip","Typography","component","DatasetDownloadButton","project","isDisabled","Button","disabled","Link","CustomChip","tooltipTitle","otherProps","Chip","themePreference","useContext","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","loading","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCounts","commentCount","SheetsDataContext","lastUpdate","useEffect","document","chartsTitles","data","temp","i","charts","length","map","element","index","chartTitle","chartID","FullWidthBox","Container","pt","pb","UppercaseTitle","Grid","container","item","icon","Person","label","owner","Email","contact","clickable","BarChart","scrollToSection","destination_id","destination_label","origin_id","PublishedWithChanges","Comment","mb","gutterBottom","description","rawDataTables","className","ThemePreferences","ChartComponent","chartIndex","m","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider","CommentSection","pageID","GetInTouch"],"sourceRoot":""}