{"version":3,"file":"static/js/185.66b292ce.chunk.js","mappings":"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","sources":["Utils/AirQualityIndexHelper.jsx","Graphs/ChartSubstituteComponents/AirQualityIndexTable.jsx","Components/AirQualityHelper.jsx","Components/DatasetDownload/DatasetCalendar.jsx","Components/DatasetDownload/DatasetDownloadDialog.jsx","Components/CollapsibleSubtitle.jsx","Pages/Project/Project.jsx"],"sourcesContent":["import CustomThemes from '../Themes/CustomThemes';\n\nconst AQIdatabase = [\n  {\n    id: 0,\n    category: 'Good',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[0],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[0],\n    aqiUS: {\n      low: 0,\n      high: 50\n    },\n    rawPM2_5: {\n      low: 0.0,\n      high: 12.0\n    },\n    description: 'Air quality is satisfactory, and air pollution poses little or no risk',\n    healthSuggestions: {\n      outdoors: 'Enjoy outdoor activities, the air is great!',\n      indoors_generic: 'Enjoy clean indoor air',\n      indoors_dining_hall: 'Enjoy clean dining hall air',\n      indoors_gym: 'Enjoy clean air for physical activities indoors',\n      indoors_vulnerable: 'Enjoy clean indoor air'\n    }\n  },\n  {\n    id: 1,\n    category: 'Moderate',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[1],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[1],\n    aqiUS: {\n      low: 51,\n      high: 100\n    },\n    rawPM2_5: {\n      low: 12.1,\n      high: 35.4\n    },\n    description: 'Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution',\n    healthSuggestions: {\n      outdoors: 'Children and individuals with respiratory issues might need to reduce prolonged outdoor exertion',\n      indoors_generic: 'Indoor air is acceptable, but not great',\n      indoors_dining_hall: 'Indoor air is acceptable, but not great<br>Avoid Grill area',\n      indoors_gym: 'Indoor air is acceptable, but not great',\n      indoors_vulnerable: 'Indoor air is acceptable, but not great'\n    }\n  },\n  {\n    id: 2,\n    category: 'Unhealthy for Sensitive Groups',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[2],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[2],\n    aqiUS: {\n      low: 101,\n      high: 150\n    },\n    rawPM2_5: {\n      low: 35.5,\n      high: 55.4\n    },\n    description: 'Members of sensitive groups may experience health effects. The general public is less likely to be affected',\n    healthSuggestions: {\n      outdoors: 'Children and individuals with respiratory issues should limit outdoor exertion',\n      indoors_generic: '',\n      indoors_dining_hall: 'Consider take-aways<br>Avoid Grill area',\n      indoors_gym: 'Individuals with respiratory issues should lower the intensity of indoor exercises',\n      indoors_vulnerable: 'Monitor closely individuals with respiratory issues for any symptom'\n    }\n  },\n  {\n    id: 3,\n    category: 'Unhealthy',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[3],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[3],\n    aqiUS: {\n      low: 151,\n      high: 200\n    },\n    rawPM2_5: {\n      low: 55.5,\n      high: 150.4\n    },\n    description: 'Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects',\n    healthSuggestions: {\n      outdoors: 'Everyone should limit outdoor activities<br>Wear masks when going outside',\n      indoors_generic: '',\n      indoors_dining_hall:\n        'Consider take-aways<br>Avoid Grill area<br>Come back at off-peak hours',\n      indoors_gym: 'Everyone should lower the intensity of indoor exercises',\n      indoors_vulnerable: 'Monitor closely individuals with respiratory issues for any symptom'\n    }\n  },\n  {\n    id: 4,\n    category: 'Very Unhealthy',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[4],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[4],\n    aqiUS: {\n      low: 201,\n      high: 300\n    },\n    rawPM2_5: {\n      low: 150.5,\n      high: 250.4\n    },\n    description: 'Health alert: The risk of health effects is increased for everyone',\n    healthSuggestions: {\n      outdoors: 'Avoid outdoor activities at all cost<br>Wear N95 masks when going outside',\n      indoors_generic: '',\n      indoors_dining_hall:\n        'Consider take-aways<br>Avoid Grill area<br>Come back at off-peak hours',\n      indoors_gym: 'Indoor air quality is not suitable for any physical activities',\n      indoors_vulnerable: 'Monitor closely individuals with respiratory issues for any symptom'\n    }\n  },\n  {\n    id: 5,\n    category: 'Hazardous',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[5],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[5],\n    aqiUS: {\n      low: 300,\n      high: 500\n    },\n    rawPM2_5: {\n      low: 250.5,\n      high: 550.5\n    },\n    description: 'Health warning of emergency conditions: everyone is more likely to be affected',\n    healthSuggestions: {\n      outdoors: 'Avoid outdoor activities at all cost<br>Wear N95 masks when going outside',\n      indoors_generic: '',\n      indoors_dining_hall:\n        'Consider take-aways<br>Avoid Grill area<br>Come back at off-peak hours',\n      indoors_gym: 'Indoor air quality is not suitable for any physical activities',\n      indoors_vulnerable: ''\n    }\n  },\n];\n\nexport default AQIdatabase;\n","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport ChartComponent from '../ChartComponent';\nimport AQIdatabase from '../../Utils/AirQualityIndexHelper';\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { isTiny, hideAQIDescription, themePreference } = props;\n\n  const renderAQIchart = ({ shouldRender }) => {\n    let aqiChart = null;\n\n    if (shouldRender) {\n      const dataArray = [['category'], ['US AQI']];\n      for (let i = 0; i < AQIdatabase.length; i += 1) {\n        dataArray[0].push(AQIdatabase[i].category);\n        dataArray[1].push(\n          Math.ceil((AQIdatabase[i].aqiUS.high - AQIdatabase[i].aqiUS.low) / 50) * 50\n        );\n      }\n\n      aqiChart = (\n        <ChartComponent\n          chartHeight=\"4rem\"\n          chartData={\n            {\n              dataArray,\n              chartType: 'BarChart',\n              options: {\n                enableInteractivity: false,\n                legend: { position: 'none' },\n                hAxis: {\n                  ticks: [0, 50, 100, 150, 200, 300, 500]\n                },\n                chartArea:\n                {\n                  width: { portrait: '98%', landscape: '50%' },\n                  height: { portrait: '20%', landscape: '30%' }\n                },\n                isStacked: true,\n                colors: 'aqi',\n                bar: { groupWidth: '100%' }\n              }\n            }\n          }\n        />\n      );\n    }\n\n    return aqiChart;\n  };\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5 Concentration\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQIdatabase.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: themePreference === ThemePreferences.light ? element.lightThemeColor : element.darkThemeColor }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.category}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {element.aqiUS.low}\n                  &nbsp;\n                  -\n                  &nbsp;\n                  {element.aqiUS.high}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {element.rawPM2_5.low}\n                  &nbsp;\n                  -\n                  &nbsp;\n                  {element.rawPM2_5.high}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(element.healthSuggestions.outdoors, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n      {/* {renderAQIchart({ shouldRender: !hideAQIDescription })} */}\n    </>\n\n  );\n}\n\nexport default AirQualityIndexTable;\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Fab, Fade, Popper, Paper, Typography, Stack } from '@mui/material';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from './Header/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../Utils/Tracking';\nimport AirQualityIndexTable from '../Graphs/ChartSubstituteComponents/AirQualityIndexTable';\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopperOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopperClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\">\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopperOpen}\n          onMouseLeave={handlePopperClose}\n          onClick={(event) => isMobile && (open ? handlePopperClose() : handlePopperOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popper\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"top-end\"\n        onClose={handlePopperClose}\n        keepMounted\n        disableRestoreFocus\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={8} sx={{ py: 0.5, mb: 1 }}>\n              <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n                AQI at quick glance\n              </Typography>\n              <AirQualityIndexTable isTiny hideAQIDescription themePreference />\n            </Paper>\n          </Fade>\n        )}\n\n      </Popper>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { styled } from '@mui/material/styles';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { DayCalendarSkeleton } from '@mui/x-date-pickers/DayCalendarSkeleton';\nimport Card from '@mui/material/Card';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nconst HighlightedDay = styled(PickersDay)(({ theme }) => ({\n  // styles for dot\n  '&:after, :hover::after': {\n    content: '\".\"',\n    fontSize: '1.5rem',\n    bottom: '-0.5rem',\n    position: 'absolute',\n    color: theme.palette.primary.main,\n    opacity: 0.5\n  },\n  '&:hover::after': {\n    opacity: 1\n  }\n}));\n\nfunction isValidDate(date, validDates) {\n  return validDates.indexOf(dayjs(date).format('YYYY-MM-DD')) >= 0;\n}\n\nfunction CustomDayComponent(props) {\n  const { versionDates = [], day, ...other } = props;\n\n  const isHighlighted = versionDates.indexOf(dayjs(day).format('YYYY-MM-DD')) >= 0;\n\n  return (\n    isHighlighted\n      ? <HighlightedDay {...other} day={day} />\n      : <PickersDay {...other} day={day} />\n  );\n}\n\nexport default function DatasetCalendar(props) {\n  const { smallScreen, onChange, versions } = props;\n\n  const versionDates = versions\n    .filter((version) => version.version.length === 10) // valid date\n    .map((version) => version.version);\n\n  return (\n    <ClickAwayListener onClickAway={() => onChange('close')}>\n      <Card\n        sx={!smallScreen && { position: 'absolute', right: 0, zIndex: 999 }}\n        raised\n      >\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DateCalendar\n            loading={!versionDates}\n            format=\"YYYY-MM-DD\"\n            renderLoading={() => <DayCalendarSkeleton />}\n            slots={{\n              day: CustomDayComponent,\n            }}\n            onChange={(value, selectionState) => {\n              if (selectionState === 'finish') {\n                return onChange(dayjs(value).format('YYYY-MM-DD'));\n              }\n              return null;\n            }}\n            slotProps={{\n              day: {\n                versionDates\n              }\n            }}\n            // disable the date if its not a valid date\n            shouldDisableDate={(day) => !isValidDate(day, versionDates)}\n            disableHighlightToday\n            minDate={dayjs(versionDates.slice(-1)[0])}\n            maxDate={dayjs(versionDates[0])}\n          />\n        </LocalizationProvider>\n      </Card>\n    </ClickAwayListener>\n  );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { Container, Avatar, Modal, Tooltip, Box, Link, Typography, Stack, Select, FormControl, MenuItem, Grid, Chip, Dialog, Button, DialogActions, DialogContent, useMediaQuery, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { RawDatasetsMetadataContext } from '../../ContextProviders/RawDatasetsMetadataContext';\n\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport EventIcon from '@mui/icons-material/Event';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport { fetchDataFromURL } from './DatasetFetcher';\nimport DatasetCalendar from './DatasetCalendar';\n\nexport default function DatasetDownloadDialog(props) {\n  const { project } = props;\n  const rawDatasetsMetadata = useContext(RawDatasetsMetadataContext);\n  const [datasets, setDatasets] = useState();\n\n  useEffect(() => {\n    if (!project || !rawDatasetsMetadata) return;\n    setDatasets(rawDatasetsMetadata[project?.id]); // get all the dataset(s) of this project\n  }, [project, rawDatasetsMetadata]);\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  function getOwnerString(owners) {\n    if (!owners || owners.length === 0) {\n      return 'the relevant owners';\n    } else if (owners.length === 1) {\n      return owners[0];\n    } else if (owners.length === 2) {\n      return owners.join(' and ');\n    } else {\n      const lastOwner = owners.pop();\n      const oxfordCommaOwners = owners.join(', ');\n      return `${oxfordCommaOwners}, and ${lastOwner}`;\n    }\n  }\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          handleOpen();\n          Tracking.sendEventAnalytics(Tracking.Events.rawDatasetButtonClicked, {\n            project_id: project.id\n          });\n        }}\n        variant=\"contained\"\n      >\n        <DataObjectIcon sx={{ fontSize: '1rem' }} />&nbsp;Raw Dataset\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"lg\"\n        fullWidth\n        fullScreen={smallScreen}\n        keepMounted\n      >\n        {(\n          smallScreen &&\n          <DialogActions justifyContent=\"flex-start\">\n            <Button autoFocus onClick={handleClose}>\n              <ChevronLeftIcon sx={{ fontSize: '1rem' }} />Back\n            </Button>\n          </DialogActions>\n        )}\n\n        <DialogContent sx={{\n          px: smallScreen ? 2 : 3,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'start',\n          height: '100%'\n        }}>\n          <Chip label={project.title} size=\"small\" sx={{ mb: 1 }} />\n          <Typography variant=\"h6\" >\n            Preview and download raw dataset(s)\n          </Typography>\n\n          <DatasetSelectorAndPreviewer datasets={datasets} smallScreen={smallScreen} project={project} />\n          {\n            datasets &&\n            <Typography variant=\"caption\" sx={{ my: 3, fontStyle: 'italic' }} >\n              This dataset is provided by the CITIES Dashboard with the support of {getOwnerString(project.owners)}. Should you intend to utilize this dataset for your project, research, or publication, we kindly request that you notify us at <Link href='mailto:nyuad.cities@nyu.edu'>nyuad.cities@nyu.edu</Link> to discuss citation requirements.\n            </Typography>\n          }\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nconst DatasetSelectorAndPreviewer = (props) => {\n  const { datasets, smallScreen, project } = props;\n  const [previewingDataset, setPreviewingDataset] = useState();\n  const [previewingDatasetId, setPreviewingDatasetId] = useState();\n\n  // Preview the first version of the first dataset initially\n  useEffect(() => {\n    if (datasets?.length > 0) {\n      setPreviewingDataset(datasets[0]?.versions[0]);\n      setPreviewingDatasetId(datasets[0]?.id);\n      fetchDataFromURL(datasets[0]?.versions[0]?.rawLink, 'csv').then((data) => {\n        setPreviewingDataset({ ...datasets[0]?.versions[0], fetchedDataset: data });\n      });\n    }\n  }, [datasets]);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"start\" spacing={3}>\n      <Grid item sm={12} md={6}>\n        <DatasetsTable\n          datasets={datasets}\n          smallScreen={smallScreen}\n          previewingDataset={previewingDataset}\n          setPreviewingDataset={setPreviewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          setPreviewingDatasetId={setPreviewingDatasetId}\n        />\n      </Grid>\n      <Grid item sm={12} md={6} maxWidth={smallScreen ? '100%' : 'unset'} sx={{ mt: 1 }}>\n        <PreviewDataset\n          previewingDataset={previewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          project={project}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n    </Grid>\n  )\n};\n\nconst DatasetsTable = (props) => {\n  const { datasets, smallScreen, previewingDataset, setPreviewingDataset, previewingDatasetId, setPreviewingDatasetId } = props;\n  return (\n    <Table\n      size=\"small\"\n      sx={{\n        tableLayout: 'fixed',\n        '& td, div, .MuiMenuItem-root': {\n          fontSize: smallScreen ? '0.625rem' : '0.8rem'\n        }\n      }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell sx={{ pl: 1 }}>\n            Dataset\n          </TableCell>\n          <TableCell sx={{ width: smallScreen ? '9.5rem' : '11rem' }}>Version</TableCell>\n          <TableCell sx={{ width: smallScreen ? '5rem' : '6rem' }}>\n            Size\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {datasets?.map((dataset) => (\n          <Dataset\n          key={dataset.id}\n            smallScreen={smallScreen}\n            dataset={dataset}\n            previewingDataset={previewingDataset}\n            setPreviewingDataset={setPreviewingDataset}\n            isPreviewing={dataset.id === previewingDatasetId}\n            setPreviewingDatasetId={setPreviewingDatasetId}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nconst Dataset = (props) => {\n  const { smallScreen, dataset, setPreviewingDataset, isPreviewing, previewingDatasetId, setPreviewingDatasetId } = props;\n\n  const [fetchedDatasets, setFetchedDatasets] = useState({});\n  const NUM_RECENT_VERSIONS = 3;\n\n  const latestVersionOfThisDataset = dataset?.versions[0] || {};\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedVersionOfThisDataset, setSelectedVersionOfThisDataset] = useState(latestVersionOfThisDataset);\n\n  // only show NUM_RECENT_VERSIONS rows in Dropdown\n  const visibleVersions = dataset?.versions.slice(0, NUM_RECENT_VERSIONS);\n  // if currently selected version is not in first NUM_RECENT_VERSION rows,\n  // add it to the list\n  if (!visibleVersions.find((version) => version == selectedVersionOfThisDataset)) {\n    visibleVersions.push({ ...selectedVersionOfThisDataset, isOlderVersion: true });\n  }\n\n  // only show Calendar option if there are more than NUM_RECENT_VERSIONS versions\n  const shouldShowCalendar = dataset?.versions.length > NUM_RECENT_VERSIONS;\n\n  const handleVersionChange = (event) => {\n    const selectedVal = event.target.value;\n    if (selectedVal === 'Calendar') {\n      setShowCalendar(true);\n      return;\n    }\n    // Loop through the array (allVersionsOfThisDataset) to find the one with the selected version\n    const selectedVersion = dataset?.versions.find(aDatasetVersion => {\n      return aDatasetVersion.version === selectedVal;\n    });\n    setSelectedVersionOfThisDataset(selectedVersion);\n    setPreviewingDatasetId(dataset.id);\n    setPreviewingDataset(selectedVersion);\n\n    fetchThisDataset(selectedVersion);\n  };\n\n  const handleCalendarChange = (event) => {\n    // close calendar after selecting\n    setShowCalendar(false)\n    if (event === 'close') { // click outside of card\n      return\n    }\n\n    handleVersionChange({ target: { value: event } });\n  }\n\n  const fetchThisDataset = (selectedVersion) => {\n    // If this dataset version hasn't been fetched yet,\n    // fetch it and append it into the object fetchedDatasets\n    if (!fetchedDatasets[selectedVersion.version]) {\n      fetchDataFromURL(selectedVersion.rawLink, 'csv').then((data) => {\n        const selectedVersionWithFetchedDataset = { ...selectedVersion, fetchedDataset: data };\n        setPreviewingDataset(selectedVersionWithFetchedDataset);\n        setFetchedDatasets({\n          ...fetchedDatasets,\n          [selectedVersionWithFetchedDataset.version]: selectedVersionWithFetchedDataset\n        });\n      });\n    }\n    // If it has been fetched before, simply get it from memory \n    else {\n      setPreviewingDataset(fetchedDatasets[selectedVersion.version]);\n    }\n  }\n\n  const setThisDatasetToPreview = () => {\n    if (previewingDatasetId !== dataset.id) {\n      setPreviewingDatasetId(dataset.id);\n      setPreviewingDataset(selectedVersionOfThisDataset);\n      fetchThisDataset(selectedVersionOfThisDataset);\n    }\n  }\n\n  const theme = useTheme();\n\n  const formatFileSize = (sizeInBytes) => {\n    if (!sizeInBytes) return;\n\n    if (sizeInBytes < 1024 * 1024) {\n      return (sizeInBytes / 1024).toFixed(1) + \" KB\";\n    } else {\n      return (sizeInBytes / (1024 * 1024)).toFixed(1) + \" MB\";\n    }\n  }\n\n  return (\n    <>\n      <TableRow key={dataset.id}>\n        <TableCell\n          sx={{\n            pl: 1,\n            cursor: 'pointer',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}\n          onClick={setThisDatasetToPreview}>\n          {selectedVersionOfThisDataset?.name}\n        </TableCell>\n\n        <TableCell sx={{ position: 'relative', background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {showCalendar &&\n            (smallScreen ? <Modal\n              open={showCalendar}\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              <DatasetCalendar\n                onChange={handleCalendarChange}\n                smallScreen={smallScreen}\n                versions={dataset?.versions}\n              />\n            </Modal>\n              : <DatasetCalendar\n                onChange={handleCalendarChange}\n                versions={dataset?.versions}\n              />)}\n          <FormControl size=\"small\">\n            <Select\n              value={selectedVersionOfThisDataset?.version}\n              onClick={() => {\n                if (dataset.versions.length <= 1) setThisDatasetToPreview();\n              }}\n              onChange={handleVersionChange}\n              variant=\"standard\"\n              MenuProps={{ disablePortal: true }}\n            >\n              {visibleVersions.map((aDatasetVersion, index) => (\n                <MenuItem\n                  key={aDatasetVersion.version}\n                  value={aDatasetVersion.version}\n                  sx={[\n                    (index === visibleVersions.length - 1) && {\n                      mb: -0.75\n                    },\n                    aDatasetVersion.isOlderVersion && {\n                      marginTop: '1rem',\n                      '&::before': {\n                        content: '\"\"',\n                        borderTop: `2px dotted ${theme.palette.text.secondary}`,\n                        width: '1rem',\n                        height: '1rem',\n                        position: 'absolute',\n                        top: 0,\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                      }\n                    }\n                  ]}\n                >\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    {aDatasetVersion.version}\n                    { /* 'LATEST' chip for latest version */}\n                    {aDatasetVersion === latestVersionOfThisDataset &&\n                      <Tooltip title=\"Latest version\" enterDelay={0} leaveDelay={200}>\n                        <Avatar sx={{\n                          ml: 0.5,\n                          width: '1rem',\n                          height: '1rem',\n                          background: theme.palette.success.main\n                        }}>\n                          <PublishedWithChangesIcon sx={{ width: '0.8rem', height: '0.8rem' }} />\n                        </Avatar>\n                      </Tooltip>\n                    }\n                  </Stack>\n                </MenuItem>\n              ))}\n\n              {shouldShowCalendar && <MenuItem\n                key=\"Calendar\"\n                value=\"Calendar\"\n                sx={{ pt: 1, mt: 1, mb: -0.75, borderTop: '0.5px solid' }}\n              >\n                <Stack direction=\"row\" alignItems=\"center\">\n                  Older Versions\n                  <EventIcon fontSize='small' sx={{ ml: 0.5 }} />\n                </Stack>\n              </MenuItem>\n              }\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell sx={{ background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {formatFileSize(selectedVersionOfThisDataset?.sizeInBytes)}\n        </TableCell>\n      </TableRow >\n    </>\n  )\n}\n\nconst PreviewDataset = (props) => {\n  const { previewingDataset, previewingDatasetId, project, smallScreen } = props;\n  const downloadDatasetName = `[${project.id}] ${previewingDataset?.name}-${previewingDataset?.version}.csv`;\n\n  const theme = useTheme();\n\n  const downloadPreviewingDataset = () => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const blob = new Blob([previewingDataset?.fetchedDataset], { type: 'application/octet-stream' }); // create a Blob with the raw data\n    const url = URL.createObjectURL(blob); // create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = downloadDatasetName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click(); // simulate a click on the download link\n    URL.revokeObjectURL(url); // clean up by revoking the object URL\n    document.body.removeChild(downloadLink);\n  };\n\n  const [formattedData, setFormattedData] = useState('');\n  const [rowIndices, setRowIndices] = useState('');\n  const numFirstLastRowsToPreview = 5;\n\n  useEffect(() => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const csvData = previewingDataset?.fetchedDataset;\n    const lines = csvData.split('\\n');\n    const numRows = lines.length;\n\n    if (numRows <= numFirstLastRowsToPreview * 2) {\n      setFormattedData(csvData);\n      setRowIndices(Array.from({ length: numRows }, (_, index) => index + 1).join('\\n')); // +1 because rowNumber starts at 1 while index starts at 0\n    } else {\n\n      const firstRows = lines.slice(0, numFirstLastRowsToPreview);\n      const lastRows = lines.slice(numRows - numFirstLastRowsToPreview);\n\n      const numOfHiddenRows = numRows - 2 * numFirstLastRowsToPreview;\n\n      const middleRow = [`... [${numOfHiddenRows} rows hidden] ...`];\n\n      setFormattedData(firstRows.concat(middleRow).concat(lastRows).join('\\n'));\n      setRowIndices(\n        Array.from({\n          length: numFirstLastRowsToPreview * 2 + 1 // +1 to account for the middleRow\n        },\n          (_, index) => {\n            const rowIndex = index + 1; // +1 because rowNumber starts at 1 while index starts at 0\n            // Indices for the first rows\n            if (rowIndex < numFirstLastRowsToPreview + 1) {\n              return rowIndex;\n            }\n            // No index for the middle row\n            else if (rowIndex == numFirstLastRowsToPreview + 1) {\n              return '';\n            }\n            // Indices for the last rows\n            else {\n              return numOfHiddenRows + rowIndex - 1;\n            }\n          })\n          .join('\\n'));\n    }\n\n  }, [previewingDataset]);\n\n  return (\n    <Stack spacing={1}>\n      <Box sx={{ '& *': { fontFamily: \"monospace !important\" } }}>\n        <Stack direction=\"row\">\n          <Typography variant='body2' gutterBottom fontWeight={600}>\n            {previewingDataset ?\n              `Previewing: ${previewingDataset.name} (${previewingDataset?.version})`\n              : 'Not previewing any dataset'}\n          </Typography>\n        </Stack>\n\n        <Box\n          component=\"pre\"\n          sx={{\n            overflowX: 'auto',\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.customBackground,\n            p: 2,\n            pt: 1.5,\n            borderRadius: theme.spacing(1),\n            borderTopLeftRadius: 0,\n            minHeight: \"5rem\",\n            width: smallScreen ? '100%' : 'unset',\n            marginTop: 0\n          }}\n        >\n          <Stack direction=\"row\" sx={{ fontSize: smallScreen ? '0.625rem !important' : '0.8rem !important' }}>\n            <Box sx={{ mr: 2, userSelect: 'none' }}>\n              {rowIndices}\n            </Box>\n            <Box>\n              {formattedData}\n            </Box>\n          </Stack>\n        </Box>\n      </Box>\n      <Box textAlign=\"center\" >\n        <Button\n          variant=\"contained\"\n          sx={{\n            textTransform: 'none',\n            textAlign: 'left',\n            lineHeight: 1.1,\n            px: 1.5,\n            py: 1\n          }}\n          onClick={() => {\n            downloadPreviewingDataset();\n            Tracking.sendEventAnalytics(Tracking.Events.rawDatasetDownloaded, {\n              project_id: project.id,\n              dataset_id: previewingDatasetId,\n              dataset_name: previewingDataset.name,\n              dataset_version: previewingDataset.version\n            });\n          }}\n          disabled={!previewingDataset}\n        >\n          <DownloadIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n          {previewingDataset ? downloadDatasetName : \"No dataset available to download\"}\n        </Button>\n      </Box>\n    </Stack >\n  )\n}","import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport parse from 'html-react-parser';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport { replacePlainHTMLWithMuiComponents } from '../Utils/Utils';\n\nfunction CollapsibleSubtitle({ text, wordLimit = 75, reference }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // React to changes in screen width\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm')); // 'sm' means \"small and below\"\n\n  const words = text.split(' ');\n\n  // If not on mobile or words are within limit, just display the full text\n  if (!isMobile || words.length <= wordLimit) {\n    return (\n      <Box>\n        <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n        {reference\n          && (\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {parse(reference, { replace: replacePlainHTMLWithMuiComponents })}\n            </Typography>\n          )}\n      </Box>\n    );\n  }\n\n  let displayText = words.slice(0, wordLimit).join(' ');\n  const lastFullStop = displayText.lastIndexOf('.');\n\n  if (lastFullStop !== -1) {\n    displayText = displayText.slice(0, lastFullStop + 1);\n  }\n\n  return (\n    <ClickAwayListener onClickAway={() => setIsExpanded(false)}>\n      <Box onClick={() => setIsExpanded(!isExpanded)} style={{ cursor: 'pointer' }}>\n        {isExpanded\n          ? (\n            <>\n              <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n              {reference && <Typography variant=\"caption\" color=\"text.secondary\">{parse(reference, { replace: replacePlainHTMLWithMuiComponents })}</Typography>}\n            </>\n          )\n          : (\n            <>\n              <Typography\n                display=\"inline\"\n              >\n                {parse(displayText, { replace: replacePlainHTMLWithMuiComponents })}\n                ...\n              </Typography>\n              <Typography\n                display=\"inline\"\n                color=\"text.primary\"\n                fontWeight=\"500\"\n                sx={{\n                  ml: 0.5,\n                  '& :hover': {\n                    textDecoration: 'underline'\n                  }\n                }}\n              >\n                See more\n              </Typography>\n            </>\n          )}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n\nexport default CollapsibleSubtitle;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip } from '@mui/material';\n\nimport { useTheme } from '@mui/material/styles';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../../Components/AirQualityHelper';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport DatasetDownloadDialog from '../../Components/DatasetDownload/DatasetDownloadDialog';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\nimport { SheetsDataContext } from '../../ContextProviders/SheetsDataContext';\n\nimport ChartSubstituteComponentLoader from '../../Graphs/ChartSubstituteComponents/ChartSubstituteComponentLoader';\n\nimport CollapsibleSubtitle from '../../Components/CollapsibleSubtitle';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle} enterDelay={0} leaveDelay={200}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  const { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n  const commentCount = commentCounts[project.id];\n\n  const [sheetsData] = useContext(SheetsDataContext);\n  const lastUpdate = sheetsData[project.id];\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  const theme = useTheme();\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          {\n            project.id === 'air-quality' && <AirQualityIndexLegendQuickGlance themePreference={themePreference} />\n          }\n\n          <FullWidthBox backgroundColor='customAlternateBackground'>\n            <Container sx={{ pt: 5, pb: 3 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                {\n                  project.owners.map((owner, index) => (\n                    <Grid item>\n                      <CustomChip\n                        key={index}\n                        icon={<PersonIcon />}\n                        label={owner}\n                        tooltipTitle=\"Dataset Owner\"\n                      />\n                    </Grid>\n                  ))\n                }\n\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n\n                {\n                  lastUpdate &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<PublishedWithChangesIcon />}\n                      label={`Last update: ${lastUpdate}`}\n                      tooltipTitle=\"Last Update\" />\n                  </Grid>\n                }\n\n                {commentCount != null &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<CommentIcon />}\n                      label={`${commentCount} Comment${commentCount > 1 ? \"s\" : \"\"}`}\n                      tooltipTitle=\"Number of Comments\"\n                      onClick={() => {\n                        scrollToSection(jsonData.commentSection.id);\n                        Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                          {\n                            destination_id: jsonData.commentSection.id,\n                            destination_label: jsonData.commentSection.toString(),\n                            origin_id: 'chip'\n                          })\n                      }}\n                    />\n                  </Grid>}\n              </Grid>\n\n              <Typography\n                component=\"div\"\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{\n                  textAlign: 'justify', pb: 3, mb: 0, \"& table *\": {\n                    color: `${theme.palette.text.secondary}`\n                  }\n                }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadDialog project={project} />\n            </Container>\n          </FullWidthBox>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <FullWidthBox\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 != 0 && 'customAlternateBackground'\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n\n                  {/* Either display the regular ChartComponent, or substitute with a customized component in ../../Graphs/ChartSubstituteComponents/ (if specified) */}\n                  {element.chartSubstituteComponentName ?\n                    <ChartSubstituteComponentLoader chartSubstituteComponentName={element.chartSubstituteComponentName} />\n                    : (\n                      <ChartComponent\n                        chartData={{\n                          chartIndex: index,\n                          sheetId: project.sheetId,\n                          ...element,\n                        }}\n                      />\n                    )}\n                  <Box sx={{ my: 3 }}>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                      sx={{ mb: 1 }}\n                    >\n                      {element.subtitle &&\n                        <CollapsibleSubtitle\n                          text={element.subtitle}\n                          reference={element.reference ? element.reference : undefined}\n                        />\n                      }\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].subchartSubtitle &&\n                        <CollapsibleSubtitle\n                          text={element.subcharts[Object.values(tab)[index]].subchartSubtitle}\n                          reference={element.subcharts[Object.values(tab)[index]].reference ? element.subcharts[Object.values(tab)[index]].reference : undefined}\n                        />\n                      }\n                    </Typography>\n                  </Box>\n                </Container>\n              </FullWidthBox>\n            ))}\n          </Box>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </FullWidthBox>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["id","category","lightThemeColor","CustomThemes","darkThemeColor","aqiUS","low","high","rawPM2_5","description","healthSuggestions","outdoors","indoors_generic","indoors_dining_hall","indoors_gym","indoors_vulnerable","StyledTable","styled","Table","theme","isTiny","minWidth","fontSize","color","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","themePreference","Box","overflow","size","TableHead","TableRow","TableCell","sx","pr","width","height","pl","align","TableBody","AQIdatabase","element","index","border","backgroundColor","ThemePreferences","parse","replace","replacePlainHTMLWithMuiComponents","AirQualityIndexLegendQuickGlance","useState","anchorEl","setAnchorEl","handlePopperOpen","event","currentTarget","Tracking","handlePopperClose","open","Boolean","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","Fab","mt","undefined","onMouseEnter","onMouseLeave","onClick","isMobile","Stack","direction","alignItems","Air","Typography","variant","Popper","pointerEvents","placement","onClose","keepMounted","disableRestoreFocus","transition","TransitionProps","Fade","timeout","Paper","elevation","py","mb","mx","AirQualityIndexTable","HighlightedDay","PickersDay","content","bottom","position","main","opacity","CustomDayComponent","versionDates","day","other","indexOf","dayjs","format","DatasetCalendar","smallScreen","onChange","versions","filter","version","length","map","ClickAwayListener","onClickAway","Card","right","zIndex","raised","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","loading","renderLoading","DayCalendarSkeleton","slots","value","selectionState","slotProps","shouldDisableDate","date","disableHighlightToday","minDate","slice","maxDate","DatasetDownloadDialog","project","rawDatasetsMetadata","useContext","RawDatasetsMetadataContext","datasets","setDatasets","useEffect","useTheme","useMediaQuery","setOpen","handleClose","Button","project_id","DataObject","Dialog","maxWidth","fullWidth","fullScreen","DialogActions","justifyContent","autoFocus","ChevronLeft","DialogContent","px","display","flexDirection","Chip","label","title","DatasetSelectorAndPreviewer","my","fontStyle","owners","join","lastOwner","pop","oxfordCommaOwners","getOwnerString","Link","href","previewingDataset","setPreviewingDataset","previewingDatasetId","setPreviewingDatasetId","fetchDataFromURL","rawLink","then","data","fetchedDataset","Grid","container","spacing","item","sm","md","DatasetsTable","PreviewDataset","tableLayout","dataset","Dataset","isPreviewing","fetchedDatasets","setFetchedDatasets","latestVersionOfThisDataset","showCalendar","setShowCalendar","selectedVersionOfThisDataset","setSelectedVersionOfThisDataset","visibleVersions","find","push","isOlderVersion","shouldShowCalendar","handleVersionChange","selectedVal","target","selectedVersion","aDatasetVersion","fetchThisDataset","handleCalendarChange","selectedVersionWithFetchedDataset","setThisDatasetToPreview","cursor","background","NYUpurpleLight","name","Modal","FormControl","Select","MenuProps","disablePortal","MenuItem","marginTop","borderTop","top","left","transform","Tooltip","enterDelay","leaveDelay","Avatar","ml","success","PublishedWithChanges","pt","Event","sizeInBytes","toFixed","formatFileSize","downloadDatasetName","formattedData","setFormattedData","rowIndices","setRowIndices","csvData","lines","split","numRows","numFirstLastRowsToPreview","Array","from","_","firstRows","lastRows","numOfHiddenRows","middleRow","concat","rowIndex","fontFamily","gutterBottom","component","overflowX","customBackground","p","borderRadius","borderTopLeftRadius","minHeight","mr","userSelect","textAlign","textTransform","blob","Blob","type","url","URL","createObjectURL","downloadLink","document","createElement","download","body","appendChild","click","revokeObjectURL","removeChild","downloadPreviewingDataset","dataset_id","dataset_name","dataset_version","disabled","Download","wordLimit","reference","isExpanded","setIsExpanded","words","displayText","lastFullStop","lastIndexOf","style","textDecoration","CustomChip","tooltipTitle","otherProps","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCount","SheetsDataContext","lastUpdate","chartsTitles","temp","i","charts","chartTitle","chartID","FullWidthBox","Container","pb","UppercaseTitle","owner","icon","Person","Email","contact","clickable","BarChart","scrollToSection","jsonData","destination_id","destination_label","origin_id","Comment","className","chartSubstituteComponentName","ChartSubstituteComponentLoader","ChartComponent","chartData","chartIndex","sheetId","subtitle","Object","keys","subcharts","values","subchartSubtitle","Divider","CommentSection","pageID"],"sourceRoot":""}