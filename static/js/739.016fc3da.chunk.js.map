{"version":3,"file":"static/js/739.016fc3da.chunk.js","mappings":"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","sources":["Graphs/ChartSubstituteComponents/AirQualityIndexTable.jsx","Pages/Home/GetInTouch.jsx","Components/AirQualityHelper.jsx","Components/DatasetDownload/DatasetCalendar.jsx","Components/DatasetDownload/DatasetDownloadDialog.jsx","Pages/Project/Project.jsx"],"sourcesContent":["import { Box, Table, TableBody, TableCell, TableHead, TableRow, Stack, styled } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ChartComponent from '../ChartComponent';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { isTiny, hideAQIDescription } = props;\n  // Air quality index legend\n  const theme = useTheme();\n\n  const airQualityIndexCategories = [\n    {\n      name: 'Good',\n      color: theme.palette.chart.optionsColors.aqi[0],\n      aqi: '0 - 50',\n      rawPM2_5: '0.0 - 12.0',\n      description: 'Air quality is satisfactory, and air pollution poses little or no risk',\n      suggestion: 'Enjoy the clean air'\n    },\n    {\n      name: 'Moderate',\n      color: theme.palette.chart.optionsColors.aqi[1],\n      aqi: '51 - 100',\n      rawPM2_5: '12.1 - 35.4',\n      description: 'Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution',\n      suggestion: 'Individuals with respiratory issues might need to reduce prolonged outdoor exertion'\n    },\n    {\n      name: 'Unhealthy for Sensitive Groups',\n      color: theme.palette.chart.optionsColors.aqi[2],\n      aqi: '101 - 150',\n      rawPM2_5: '35.5 - 55.4',\n      description: 'Members of sensitive groups may experience health effects. The general public is less likely to be affected',\n      suggestion: 'Children and individuals with respiratory issues should limit outdoor exertion'\n    },\n    {\n      name: 'Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[3],\n      aqi: '151 - 200',\n      rawPM2_5: '55.5 - 150.4',\n      description: 'Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects',\n      suggestion: ''\n    },\n    {\n      name: 'Very Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[4],\n      aqi: '201 - 300',\n      rawPM2_5: '150.5 - 250.4',\n      description: 'Health alert: The risk of health effects is increased for everyone',\n      suggestion: ''\n    },\n    {\n      name: 'Hazardous',\n      color: theme.palette.chart.optionsColors.aqi[5],\n      aqi: '300 - 500',\n      rawPM2_5: '250.5 - 550.5',\n      description: 'Health warning of emergency conditions: everyone is more likely to be affected',\n      suggestion: ''\n    },\n  ];\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5 Concentration\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {airQualityIndexCategories.map((element) => (\n              <TableRow\n                key={element.name}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.name}\n                </TableCell>\n                <TableCell align=\"right\">{element.aqi}</TableCell>\n                <TableCell align=\"right\">\n                  {element.rawPM2_5}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription && <TableCell align=\"left\">{element.suggestion}</TableCell>}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n      {!hideAQIDescription\n        && (\n          <ChartComponent\n            chartHeight=\"4rem\"\n            chartData={\n              {\n                sheetId: '157f6vu47RBEvnBnW24jGI7cz-ov1aSBUFPdkb5sDKDc',\n                gid: 1958405288,\n                query: 'SELECT * WHERE A = \"US AQI\"',\n                headers: 1,\n                chartType: 'BarChart',\n                columns: [0, 1, 3, 5, 7, 9, 11],\n                options: {\n                  legend: { position: 'none' },\n                  enableInteractivity: false,\n                  hAxis: {\n                    ticks: [0, 50, 100, 150, 200, 300, 500]\n                  },\n                  chartArea:\n                  {\n                    width: { portrait: '98%', landscape: '50%' },\n                    height: { portrait: '20%', landscape: '30%' }\n                  },\n                  isStacked: true,\n                  colors: 'aqi',\n                  bar: { groupWidth: '100%' }\n                }\n              }\n            }\n          />\n        )}\n    </>\n\n  );\n}\n\nexport default AirQualityIndexTable;\n","import { Typography, Container, Paper, Box, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport parse from 'html-react-parser';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst IFrameWrapper = styled(Box)(({ theme }) => ({\n  filter: theme.palette.mode === 'dark' && 'invert(0.848) hue-rotate(180deg)',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: theme.spacing(2),\n  height: '90vh',\n  maxHeight: '980px',\n  [theme.breakpoints.down('sm')]: {\n    marginLeft: theme.spacing(-2),\n    marginRight: theme.spacing(-2),\n  },\n}));\n\nfunction GetInTouch() {\n  const googleFormLink = 'https://docs.google.com/forms/d/e/1FAIpQLScnPA_ohsOvyZoO9QfjNk7shfXEyUGxOfxrpGzXq0VOSxjwbA/';\n  return (\n    <Container>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n\n      <Box maxWidth=\"md\" margin=\"auto\">\n        <Paper elevation={2} sx={{ p: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {parse(jsonData.getInTouch.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <Container sx={{ mt: 3, textAlign: 'center' }}>\n            <Button\n              href={`${googleFormLink}/viewform`}\n              onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.openContactFormInExternalTab);\n              }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"contained\"\n              size=\"small\"\n            >\n              <LaunchIcon sx={{ fontSize: '1rem' }} />\n              &nbsp;\n              OPEN FORM\n            </Button>\n          </Container>\n          {/* <IFrameWrapper>\n            <iframe\n              title=\"Survey Google Form Link\"\n              src={`${googleFormLink}viewform?embedded=true`}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              Loading...\n            </iframe>\n          </IFrameWrapper> */}\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default GetInTouch;\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Fab, Fade, Popper, Paper, Typography, Stack } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from './Header/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../Utils/Tracking';\nimport AirQualityIndexTable from '../Graphs/ChartSubstituteComponents/AirQualityIndexTable';\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopperOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopperClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  // Air quality index legend\n  const theme = useTheme();\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\">\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopperOpen}\n          onMouseLeave={handlePopperClose}\n          onClick={(event) => isMobile && (open ? handlePopperClose() : handlePopperOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popper\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"top-end\"\n        onClose={handlePopperClose}\n        keepMounted\n        disableRestoreFocus\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={8} sx={{ py: 0.5, mb: 1 }}>\n              <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n                AQI at quick glance\n              </Typography>\n              <AirQualityIndexTable isTiny hideAQIDescription />\n            </Paper>\n          </Fade>\n        )}\n\n      </Popper>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { styled } from '@mui/material/styles';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { DayCalendarSkeleton } from '@mui/x-date-pickers/DayCalendarSkeleton';\nimport Card from '@mui/material/Card';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nconst HighlightedDay = styled(PickersDay)(({ theme }) => ({\n  // styles for dot\n  '&:after, :hover::after': {\n    content: '\".\"',\n    fontSize: '1.5rem',\n    bottom: '-0.5rem',\n    position: 'absolute',\n    color: theme.palette.primary.main,\n    opacity: 0.5\n  },\n  '&:hover::after': {\n    opacity: 1\n  }\n}));\n\nfunction isValidDate(date, validDates) {\n  return validDates.indexOf(dayjs(date).format('YYYY-MM-DD')) >= 0;\n}\n\nfunction ServerDay(props) {\n  const { versionDates = [], day, ...other } = props;\n\n  const isHighlighted = versionDates.indexOf(dayjs(day).format('YYYY-MM-DD')) >= 0;\n\n  return (\n    isHighlighted\n      ? <HighlightedDay {...other} day={day} />\n      : <PickersDay {...other} day={day} />\n  );\n}\n\nexport default function DatasetCalendar(props) {\n  const { onChange, versions } = props;\n\n  const versionDates = versions\n    .filter((version) => version.version.length === 10) // valid date\n    .map((version) => version.version);\n\n  return (\n    <ClickAwayListener onClickAway={() => onChange('close')}>\n      <Card\n        sx={{ position: 'absolute', right: 0, zIndex: 999 }}\n        raised\n      >\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DateCalendar\n            loading={!versionDates}\n            format=\"YYYY-MM-DD\"\n            renderLoading={() => <DayCalendarSkeleton />}\n            slots={{\n              day: ServerDay,\n            }}\n            onChange={(value, selectionState) => {\n              if (selectionState === 'finish') {\n                return onChange(dayjs(value).format('YYYY-MM-DD'));\n              }\n              return null;\n            }}\n            slotProps={{\n              day: {\n                versionDates\n              }\n            }}\n            // disable the date if its not a valid date\n            shouldDisableDate={(day) => !isValidDate(day, versionDates)}\n            disableHighlightToday\n            minDate={dayjs(versionDates.slice(-1)[0])}\n            maxDate={dayjs(versionDates[0])}\n          />\n        </LocalizationProvider>\n      </Card>\n    </ClickAwayListener>\n  );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { Avatar, Tooltip, Box, Link, Typography, Stack, Select, FormControl, MenuItem, Grid, Chip, Dialog, Button, DialogActions, DialogContent, useMediaQuery, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { RawDatasetsMetadataContext } from '../../ContextProviders/RawDatasetsMetadataContext';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport EventIcon from '@mui/icons-material/Event';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport { fetchDataFromURL } from './DatasetFetcher';\nimport DatasetCalendar from './DatasetCalendar';\n\nexport default function DatasetDownloadDialog(props) {\n  const { project } = props;\n  const rawDatasetsMetadata = useContext(RawDatasetsMetadataContext);\n  const [datasets, setDatasets] = useState();\n\n  useEffect(() => {\n    if (!project || !rawDatasetsMetadata) return;\n    setDatasets(rawDatasetsMetadata[project?.id]); // get all the dataset(s) of this project\n  }, [project, rawDatasetsMetadata]);\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  function getOwnerString(owners) {\n    if (!owners || owners.length === 0) {\n      return 'the relevant owners';\n    } else if (owners.length === 1) {\n      return owners[0];\n    } else if (owners.length === 2) {\n      return owners.join(' and ');\n    } else {\n      const lastOwner = owners.pop();\n      const oxfordCommaOwners = owners.join(', ');\n      return `${oxfordCommaOwners}, and ${lastOwner}`;\n    }\n  }\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          handleOpen();\n          Tracking.sendEventAnalytics(Tracking.Events.rawDatasetButtonClicked, {\n            project_id: project.id\n          });\n        }}\n        variant=\"contained\"\n      >\n        <DataObjectIcon sx={{ fontSize: '1rem' }} />&nbsp;Raw Dataset\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"lg\"\n        fullWidth\n        fullScreen={smallScreen}\n        keepMounted\n      >\n        {(\n          smallScreen &&\n          <DialogActions justifyContent=\"flex-start\">\n            <Button autoFocus onClick={handleClose}>\n              <ChevronLeftIcon sx={{ fontSize: '1rem' }} />Back\n            </Button>\n          </DialogActions>\n        )}\n\n        <DialogContent sx={{\n          px: smallScreen ? 2 : 3,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'start',\n          height: '100%'\n        }}>\n          <Chip label={project.title} size=\"small\" sx={{ mb: 1 }} />\n          <Typography variant=\"h6\" >\n            Preview and download raw dataset(s)\n          </Typography>\n          <DatasetSelectorAndPreviewer datasets={datasets} smallScreen={smallScreen} project={project} />\n          {\n            datasets &&\n            <Typography variant=\"caption\" sx={{ mb: 3, fontStyle: 'italic' }} >\n              This dataset is provided by the CITIES Dashboard with the support of {getOwnerString(project.owners)}. Should you intend to utilize this dataset for your project, research, or publication, we kindly request that you notify us at <Link href='mailto:nyuad.cities@nyu.edu'>nyuad.cities@nyu.edu</Link> to discuss citation requirements.\n            </Typography>\n          }\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nconst DatasetSelectorAndPreviewer = (props) => {\n  const { datasets, smallScreen, project } = props;\n  const [previewingDataset, setPreviewingDataset] = useState();\n  const [previewingDatasetId, setPreviewingDatasetId] = useState();\n\n  // Preview the first version of the first dataset initially\n  useEffect(() => {\n    if (datasets?.length > 0) {\n      setPreviewingDataset(datasets[0]?.versions[0]);\n      setPreviewingDatasetId(datasets[0]?.id);\n      fetchDataFromURL(datasets[0]?.versions[0]?.rawLink, 'csv').then((data) => {\n        setPreviewingDataset({ ...datasets[0]?.versions[0], fetchedDataset: data });\n      });\n    }\n  }, [datasets]);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"start\" spacing={3}>\n      <Grid item sm={12} md={6}>\n        <DatasetsTable\n          datasets={datasets}\n          smallScreen={smallScreen}\n          previewingDataset={previewingDataset}\n          setPreviewingDataset={setPreviewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          setPreviewingDatasetId={setPreviewingDatasetId}\n        />\n      </Grid>\n      <Grid item sm={12} md={6} maxWidth={smallScreen ? '100%' : 'unset'}>\n        <PreviewDataset\n          previewingDataset={previewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          project={project}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n      <Grid item>\n      </Grid>\n    </Grid>\n  )\n};\n\nconst DatasetsTable = (props) => {\n  const { datasets, smallScreen, previewingDataset, setPreviewingDataset, previewingDatasetId, setPreviewingDatasetId } = props;\n  return (\n    <Table\n      size=\"small\"\n      sx={{\n        tableLayout: 'fixed',\n        '& td, div, .MuiMenuItem-root': {\n          fontSize: smallScreen ? '0.625rem' : '0.8rem'\n        }\n      }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell sx={{ pl: 1 }}>\n            Dataset\n          </TableCell>\n          <TableCell sx={{ width: smallScreen ? '9.5rem' : '11rem' }}>Version</TableCell>\n          <TableCell sx={{ width: smallScreen ? '5rem' : '6rem' }}>\n            Size\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {datasets?.map((dataset) => (\n          <Dataset\n            smallScreen={smallScreen}\n            dataset={dataset}\n            previewingDataset={previewingDataset}\n            setPreviewingDataset={setPreviewingDataset}\n            isPreviewing={dataset.id === previewingDatasetId}\n            setPreviewingDatasetId={setPreviewingDatasetId}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nconst Dataset = (props) => {\n  const { dataset, setPreviewingDataset, isPreviewing, previewingDatasetId, setPreviewingDatasetId } = props;\n\n  const [fetchedDatasets, setFetchedDatasets] = useState({});\n  const NUM_RECENT_VERSIONS = 3;\n\n  const latestVersionOfThisDataset = dataset?.versions[0] || {};\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedVersionOfThisDataset, setSelectedVersionOfThisDataset] = useState(latestVersionOfThisDataset);\n\n  // only show NUM_RECENT_VERSIONS rows in Dropdown\n  const visibleVersions = dataset?.versions.slice(0, NUM_RECENT_VERSIONS);\n  // if currently selected version is not in first NUM_RECENT_VERSION rows,\n  // add it to the list\n  if (!visibleVersions.find((version) => version == selectedVersionOfThisDataset)) {\n    visibleVersions.push({ ...selectedVersionOfThisDataset, isOlderVersion: true });\n  }\n\n  // only show Calendar option if there are more than NUM_RECENT_VERSIONS versions\n  const shouldShowCalendar = dataset?.versions.length > NUM_RECENT_VERSIONS;\n\n  const handleVersionChange = (event) => {\n    const selectedVal = event.target.value;\n    if (selectedVal === 'Calendar') {\n      setShowCalendar(true);\n      return;\n    }\n    // Loop through the array (allVersionsOfThisDataset) to find the one with the selected version\n    const selectedVersion = dataset?.versions.find(aDatasetVersion => {\n      return aDatasetVersion.version === selectedVal;\n    });\n    setSelectedVersionOfThisDataset(selectedVersion);\n    setPreviewingDatasetId(dataset.id);\n    setPreviewingDataset(selectedVersion);\n\n    fetchThisDataset(selectedVersion);\n  };\n\n  const handleCalendarChange = (event) => {\n    // close calendar after selecting\n    setShowCalendar(false)\n    if (event === 'close') { // click outside of card\n      return\n    }\n\n    handleVersionChange({ target: { value: event } });\n  }\n\n  const fetchThisDataset = (selectedVersion) => {\n    // If this dataset version hasn't been fetched yet,\n    // fetch it and append it into the object fetchedDatasets\n    if (!fetchedDatasets[selectedVersion.version]) {\n      fetchDataFromURL(selectedVersion.rawLink, 'csv').then((data) => {\n        const selectedVersionWithFetchedDataset = { ...selectedVersion, fetchedDataset: data };\n        setPreviewingDataset(selectedVersionWithFetchedDataset);\n        setFetchedDatasets({\n          ...fetchedDatasets,\n          [selectedVersionWithFetchedDataset.version]: selectedVersionWithFetchedDataset\n        });\n      });\n    }\n    // If it has been fetched before, simply get it from memory \n    else {\n      setPreviewingDataset(fetchedDatasets[selectedVersion.version]);\n    }\n  }\n\n  const setThisDatasetToPreview = () => {\n    if (previewingDatasetId !== dataset.id) {\n      setPreviewingDatasetId(dataset.id);\n      setPreviewingDataset(selectedVersionOfThisDataset);\n      fetchThisDataset(selectedVersionOfThisDataset);\n    }\n  }\n\n  const theme = useTheme();\n\n  const formatFileSize = (sizeInBytes) => {\n    if (!sizeInBytes) return;\n\n    if (sizeInBytes < 1024 * 1024) {\n      return (sizeInBytes / 1024).toFixed(1) + \" KB\";\n    } else {\n      return (sizeInBytes / (1024 * 1024)).toFixed(1) + \" MB\";\n    }\n  }\n\n  return (\n    <>\n      <TableRow key={dataset.id}>\n        <TableCell\n          sx={{\n            pl: 1,\n            cursor: 'pointer',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}\n          onClick={setThisDatasetToPreview}>\n          {selectedVersionOfThisDataset?.name}\n        </TableCell>\n\n        <TableCell sx={{ position: 'relative', background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {showCalendar && <DatasetCalendar\n            onChange={handleCalendarChange}\n            versions={dataset?.versions}\n          />}\n          <FormControl size=\"small\">\n            <Select\n              value={selectedVersionOfThisDataset?.version}\n              onClick={() => {\n                if (dataset.versions.length <= 1) setThisDatasetToPreview();\n              }}\n              onChange={handleVersionChange}\n              variant=\"standard\"\n              MenuProps={{ disablePortal: true }}\n            >\n              {visibleVersions.map((aDatasetVersion, index) => (\n                <MenuItem\n                  key={aDatasetVersion.version}\n                  value={aDatasetVersion.version}\n                  sx={[\n                    (index === visibleVersions.length - 1) && {\n                      mb: -0.75\n                    },\n                    aDatasetVersion.isOlderVersion && {\n                      marginTop: '1rem',\n                      '&::before': {\n                        content: '\"\"',\n                        borderTop: `2px dotted ${theme.palette.text.secondary}`,\n                        width: '1rem',\n                        height: '1rem',\n                        position: 'absolute',\n                        top: 0,\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                      }\n                    }\n                  ]}\n                >\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    {aDatasetVersion.version}\n                    { /* 'LATEST' chip for latest version */}\n                    {aDatasetVersion === latestVersionOfThisDataset &&\n                      <Tooltip title=\"Latest version\" enterDelay={0} leaveDelay={200}>\n                        <Avatar sx={{\n                          ml: 0.5,\n                          width: '1rem',\n                          height: '1rem',\n                          background: theme.palette.success.main\n                        }}>\n                          <PublishedWithChangesIcon sx={{ width: '0.8rem', height: '0.8rem' }} />\n                        </Avatar>\n                      </Tooltip>\n                    }\n                  </Stack>\n                </MenuItem>\n              ))}\n\n              {shouldShowCalendar && <MenuItem\n                key=\"Calendar\"\n                value=\"Calendar\"\n                sx={{ pt: 1, mt: 1, mb: -0.75, borderTop: '0.5px solid' }}\n              >\n                <Stack direction=\"row\" alignItems=\"center\">\n                  Older Versions\n                  <EventIcon fontSize='small' sx={{ ml: 0.5 }} />\n                </Stack>\n              </MenuItem>\n              }\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell sx={{ background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {formatFileSize(selectedVersionOfThisDataset?.sizeInBytes)}\n        </TableCell>\n      </TableRow >\n    </>\n  )\n}\n\nconst PreviewDataset = (props) => {\n  const { previewingDataset, previewingDatasetId, project, smallScreen } = props;\n  const downloadDatasetName = `[${project.id}] ${previewingDataset?.name}-${previewingDataset?.version}.csv`;\n\n  const theme = useTheme();\n\n  const downloadPreviewingDataset = () => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const blob = new Blob([previewingDataset?.fetchedDataset], { type: 'application/octet-stream' }); // create a Blob with the raw data\n    const url = URL.createObjectURL(blob); // create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = downloadDatasetName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click(); // simulate a click on the download link\n    URL.revokeObjectURL(url); // clean up by revoking the object URL\n    document.body.removeChild(downloadLink);\n  };\n\n  const [formattedData, setFormattedData] = useState('');\n  const [rowIndices, setRowIndices] = useState('');\n  const numFirstLastRowsToPreview = 5;\n\n  useEffect(() => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const csvData = previewingDataset?.fetchedDataset;\n    const lines = csvData.split('\\n');\n    const numRows = lines.length;\n\n    if (numRows <= numFirstLastRowsToPreview * 2) {\n      setFormattedData(csvData);\n      setRowIndices(Array.from({ length: numRows }, (_, index) => index + 1).join('\\n')); // +1 because rowNumber starts at 1 while index starts at 0\n    } else {\n\n      const firstRows = lines.slice(0, numFirstLastRowsToPreview);\n      const lastRows = lines.slice(numRows - numFirstLastRowsToPreview);\n\n      const numOfHiddenRows = numRows - 2 * numFirstLastRowsToPreview;\n\n      const middleRow = [`... [${numOfHiddenRows} rows hidden] ...`];\n\n      setFormattedData(firstRows.concat(middleRow).concat(lastRows).join('\\n'));\n      setRowIndices(\n        Array.from({\n          length: numFirstLastRowsToPreview * 2 + 1 // +1 to account for the middleRow\n        },\n          (_, index) => {\n            const rowIndex = index + 1; // +1 because rowNumber starts at 1 while index starts at 0\n            // Indices for the first rows\n            if (rowIndex < numFirstLastRowsToPreview + 1) {\n              return rowIndex;\n            }\n            // No index for the middle row\n            else if (rowIndex == numFirstLastRowsToPreview + 1) {\n              return '';\n            }\n            // Indices for the last rows\n            else {\n              return numOfHiddenRows + rowIndex - 1;\n            }\n          })\n          .join('\\n'));\n    }\n\n  }, [previewingDataset]);\n\n  return (\n    <Stack spacing={1}>\n      <Box sx={{ '& *': { fontFamily: \"monospace !important\" } }}>\n        <Chip\n          icon={<VisibilityIcon />}\n          label={`Previewing${previewingDataset && `: ${previewingDataset.name} (${previewingDataset?.version})`}`}\n          size=\"small\"\n          sx={{\n            backgroundColor: theme.palette.customBackground,\n            borderRadius: 0,\n            borderTopLeftRadius: theme.spacing(1),\n            borderTopRightRadius: theme.spacing(1),\n            p: 1,\n            pb: 0,\n          }}\n        />\n        <Box\n          component=\"pre\"\n          sx={{\n            overflowX: 'auto',\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.customBackground,\n            p: 2,\n            pt: 1.5,\n            borderRadius: theme.spacing(1),\n            borderTopLeftRadius: 0,\n            minHeight: \"5rem\",\n            width: smallScreen ? '100%' : 'unset',\n            marginTop: 0\n          }}\n        >\n          <Stack direction=\"row\" sx={{ fontSize: smallScreen ? '0.625rem !important' : '0.8rem !important' }}>\n            <Box sx={{ mr: 2, userSelect: 'none' }}>\n              {rowIndices}\n            </Box>\n            <Box>\n              {formattedData}\n            </Box>\n          </Stack>\n        </Box>\n      </Box>\n      <Box textAlign=\"center\" >\n        <Button\n          variant=\"contained\"\n          sx={{\n            textTransform: 'none',\n            textAlign: 'left',\n            lineHeight: 1.1,\n            px: 1.5,\n            py: 1\n          }}\n          onClick={() => {\n            downloadPreviewingDataset();\n            Tracking.sendEventAnalytics(Tracking.Events.rawDatasetDownloaded, {\n              project_id: project.id,\n              dataset_id: previewingDatasetId,\n              dataset_name: previewingDataset.name,\n              dataset_version: previewingDataset.version\n            });\n          }}\n          disabled={!previewingDataset}\n        >\n          <DownloadIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n          {previewingDataset ? downloadDatasetName : \"No dataset available to download\"}\n        </Button>\n      </Box>\n    </Stack >\n  )\n}","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip } from '@mui/material';\n\nimport { useTheme } from '@mui/material/styles';\n\nimport GetInTouch from '../Home/GetInTouch';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../../Components/AirQualityHelper';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport DatasetDownloadDialog from '../../Components/DatasetDownload/DatasetDownloadDialog';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\nimport { SheetsDataContext } from '../../ContextProviders/SheetsDataContext';\n\nimport ChartSubstituteComponentLoader from '../../Graphs/ChartSubstituteComponents/ChartSubstituteComponentLoader';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle} enterDelay={0} leaveDelay={200}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n  const commentCount = commentCounts[project.id];\n\n  const [sheetsData] = useContext(SheetsDataContext);\n  const lastUpdate = sheetsData[project.id];\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  const theme = useTheme();\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          {\n            project.id === 'air-quality' && <AirQualityIndexLegendQuickGlance />\n          }\n\n          <FullWidthBox>\n            <Container sx={{ pt: 4, pb: 4 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                {\n                  project.owners.map((owner, index) => (\n                    <Grid item>\n                      <CustomChip\n                        key={index}\n                        icon={<PersonIcon />}\n                        label={owner}\n                        tooltipTitle=\"Dataset Owner\"\n                      />\n                    </Grid>\n                  ))\n                }\n\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n\n                {\n                  lastUpdate &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<PublishedWithChangesIcon />}\n                      label={`Last update: ${lastUpdate}`}\n                      tooltipTitle=\"Last Update\" />\n                  </Grid>\n                }\n\n                {commentCount != null &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<CommentIcon />}\n                      label={`${commentCount} Comment${commentCounts[project.id] > 1 ? \"s\" : \"\"}`}\n                      tooltipTitle=\"Number of Comments\"\n                      onClick={() => {\n                        scrollToSection(jsonData.commentSection.id);\n                        Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                          {\n                            destination_id: jsonData.commentSection.id,\n                            destination_label: jsonData.commentSection.toString(),\n                            origin_id: 'chip'\n                          })\n                      }}\n                    />\n                  </Grid>}\n              </Grid>\n\n              <Typography\n                component=\"div\"\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{\n                  textAlign: 'justify', pb: 3, mb: 0, \"& table *\": {\n                    color: `${theme.palette.text.secondary}`\n                  }\n                }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadDialog project={project} />\n\n              {/* <ExpandableSection\n                title=\"Sample Data\"\n                content={\n                  <>\n                    {project.rawDataTables.map((element, index) => (\n                      <SampleDataTable\n                        key={index}\n                        chartData={{ sheetId: project.sheetId, ...element }}\n                        marginBottom={(index < project.rawDataTables.length - 1) ? 3 : 1}\n                      />\n                    ))}\n                  </>\n                }\n              /> */}\n            </Container>\n          </FullWidthBox>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <FullWidthBox\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 == 0 ? 'customAlternateBackground' : ''\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n\n                  {/* Either display the regular ChartComponent, or substitute with a customized component in ../../Graphs/ChartSubstituteComponents/ (if specified) */}\n                  {element.chartSubstituteComponentName ?\n                    <ChartSubstituteComponentLoader chartSubstituteComponentName={element.chartSubstituteComponentName} />\n                    : (\n                      <ChartComponent\n                        chartData={{\n                          chartIndex: index,\n                          sheetId: project.sheetId,\n                          ...element,\n                        }}\n                      />\n                    )}\n\n                  <Box sx={{ my: 3 }}>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                    >\n                      {element.subtitle && parse(element.subtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]]\n                            .subchartSubtitle, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {element.reference && parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].reference &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]].reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                  </Box>\n                </Container>\n              </FullWidthBox>\n            ))}\n          </Box>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </FullWidthBox>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n            <GetInTouch />\n          </FullWidthBox>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["StyledTable","styled","Table","theme","isTiny","minWidth","fontSize","color","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","useTheme","airQualityIndexCategories","name","chart","optionsColors","aqi","rawPM2_5","description","suggestion","overflow","size","sx","pr","width","height","pl","align","map","element","border","backgroundColor","chartHeight","chartData","sheetId","gid","query","headers","chartType","columns","options","legend","position","enableInteractivity","hAxis","ticks","chartArea","portrait","landscape","isStacked","colors","bar","groupWidth","Box","filter","mode","display","justifyContent","marginTop","spacing","maxHeight","marginLeft","marginRight","capitalizePhrase","jsonData","maxWidth","margin","elevation","p","variant","parse","replace","replacePlainHTMLWithMuiComponents","mt","textAlign","href","onClick","Tracking","target","rel","AirQualityIndexLegendQuickGlance","useState","anchorEl","setAnchorEl","handlePopperOpen","event","currentTarget","handlePopperClose","open","Boolean","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","Fab","undefined","onMouseEnter","onMouseLeave","isMobile","Stack","direction","alignItems","Air","Typography","Popper","id","pointerEvents","placement","onClose","keepMounted","disableRestoreFocus","transition","TransitionProps","Fade","timeout","Paper","py","mb","mx","AirQualityIndexTable","HighlightedDay","PickersDay","content","bottom","main","opacity","ServerDay","versionDates","day","other","indexOf","dayjs","format","DatasetCalendar","onChange","versions","version","length","ClickAwayListener","onClickAway","Card","right","zIndex","raised","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","loading","renderLoading","DayCalendarSkeleton","slots","value","selectionState","slotProps","shouldDisableDate","date","disableHighlightToday","minDate","slice","maxDate","DatasetDownloadDialog","project","rawDatasetsMetadata","useContext","RawDatasetsMetadataContext","datasets","setDatasets","useEffect","smallScreen","useMediaQuery","setOpen","handleClose","Button","project_id","DataObject","Dialog","fullWidth","fullScreen","DialogActions","autoFocus","ChevronLeft","DialogContent","px","flexDirection","Chip","label","title","DatasetSelectorAndPreviewer","fontStyle","owners","join","lastOwner","pop","oxfordCommaOwners","getOwnerString","Link","previewingDataset","setPreviewingDataset","previewingDatasetId","setPreviewingDatasetId","fetchDataFromURL","rawLink","then","data","fetchedDataset","Grid","container","item","sm","md","DatasetsTable","PreviewDataset","tableLayout","TableHead","TableRow","TableCell","TableBody","dataset","Dataset","isPreviewing","fetchedDatasets","setFetchedDatasets","latestVersionOfThisDataset","showCalendar","setShowCalendar","selectedVersionOfThisDataset","setSelectedVersionOfThisDataset","visibleVersions","find","push","isOlderVersion","shouldShowCalendar","handleVersionChange","selectedVal","selectedVersion","aDatasetVersion","fetchThisDataset","selectedVersionWithFetchedDataset","setThisDatasetToPreview","cursor","background","NYUpurpleLight","FormControl","Select","MenuProps","disablePortal","index","MenuItem","borderTop","top","left","transform","Tooltip","enterDelay","leaveDelay","Avatar","ml","success","PublishedWithChanges","pt","Event","sizeInBytes","toFixed","formatFileSize","downloadDatasetName","formattedData","setFormattedData","rowIndices","setRowIndices","csvData","lines","split","numRows","numFirstLastRowsToPreview","Array","from","_","firstRows","lastRows","numOfHiddenRows","middleRow","concat","rowIndex","fontFamily","icon","Visibility","customBackground","borderRadius","borderTopLeftRadius","borderTopRightRadius","pb","component","overflowX","minHeight","mr","userSelect","textTransform","blob","Blob","type","url","URL","createObjectURL","downloadLink","document","createElement","download","body","appendChild","click","revokeObjectURL","removeChild","downloadPreviewingDataset","dataset_id","dataset_name","dataset_version","disabled","Download","CustomChip","tooltipTitle","otherProps","themePreference","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCounts","commentCount","SheetsDataContext","lastUpdate","chartsTitles","temp","i","charts","chartTitle","chartID","FullWidthBox","Container","UppercaseTitle","owner","Person","Email","contact","clickable","BarChart","scrollToSection","destination_id","destination_label","origin_id","Comment","gutterBottom","className","ThemePreferences","chartSubstituteComponentName","ChartSubstituteComponentLoader","ChartComponent","chartIndex","my","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider","CommentSection","pageID","GetInTouch"],"sourceRoot":""}