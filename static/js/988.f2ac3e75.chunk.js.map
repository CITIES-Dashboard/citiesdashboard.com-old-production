{"version":3,"file":"static/js/988.f2ac3e75.chunk.js","mappings":"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","sources":["Pages/Home/GetInTouch.jsx","Graphs/SampleDataTable.jsx","Pages/Project/ExpandableSection.jsx","Components/AirQualityHelper.jsx","Pages/Project/DatasetDownloadButton.jsx","Pages/Project/Project.jsx"],"sourcesContent":["import { Typography, Container, Paper, Box, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport parse from 'html-react-parser';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst IFrameWrapper = styled(Box)(({ theme }) => ({\n  filter: theme.palette.mode === 'dark' && 'invert(0.848) hue-rotate(180deg)',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: theme.spacing(2),\n  height: '90vh',\n  maxHeight: '980px',\n  [theme.breakpoints.down('md')]: {\n    marginLeft: theme.spacing(-2),\n    marginRight: theme.spacing(-2),\n  },\n}));\n\nfunction GetInTouch() {\n  const googleFormLink = 'https://docs.google.com/forms/d/e/1FAIpQLScnPA_ohsOvyZoO9QfjNk7shfXEyUGxOfxrpGzXq0VOSxjwbA/';\n  return (\n    <Container>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n\n      <Box maxWidth=\"md\" margin=\"auto\">\n        <Paper elevation={2} sx={{ p: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {parse(jsonData.getInTouch.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <Container sx={{ mt: 3, textAlign: 'center' }}>\n            <Button\n              href={`${googleFormLink}/viewform`}\n              onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.openContactFormInExternalTab);\n              }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"contained\"\n              size=\"small\"\n            >\n              <LaunchIcon sx={{ fontSize: '1rem' }} />\n              &nbsp;\n              OPEN FORM\n            </Button>\n          </Container>\n          {/* <IFrameWrapper>\n            <iframe\n              title=\"Survey Google Form Link\"\n              src={`${googleFormLink}viewform?embedded=true`}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              Loading...\n            </iframe>\n          </IFrameWrapper> */}\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default GetInTouch;\n","import { styled } from '@mui/material/styles';\nimport MemoizedChart from './MemoizedChart';\n\n// Styled component for the Google Table chart\nconst StyledTable = styled('div')(({ theme, marginBottom }) => ({\n  marginBottom: theme.spacing(marginBottom),\n  '& table': {\n    fontSize: '0.75rem',\n  },\n  '& .header-row, .frozen-column:first-of-type': {\n    backgroundColor: theme.palette.customBackground,\n    pointerEvents: 'none',\n    textAlign: 'left'\n  },\n  '& .table-row, & .odd-table-row': {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.customAlternateBackground,\n  },\n  '& .table-row .table-cell:first-of-type, & .odd-table-row .table-cell:first-of-type':\n  {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.customAlternateBackground,\n  },\n\n  '& .frozen-column': {\n    borderRightWidth: '1px !important'\n  }\n}));\n\nfunction SampleDataTable(props) {\n  const { chartData, sheetId, marginBottom } = props;\n\n  const options = {\n    width: '100%',\n    sortAscending: true,\n    frozenColumns: 1,\n    cssClassNames: {\n      headerRow: 'header-row',\n      tableRow: 'table-row',\n      oddTableRow: 'odd-table-row',\n      selectedTableRow: 'selected-table-row',\n      hoverTableRow: 'hover-table-row',\n      headerCell: 'header-cell',\n      tableCell: 'table-cell',\n    }\n  };\n\n  const chartProps = {\n    chartType: 'Table',\n    spreadSheetUrl: `https://docs.google.com/spreadsheets/d/${sheetId}`,\n    spreadSheetQueryParameters: {\n      headers: chartData.headers,\n      query: chartData.query,\n      gid: chartData.gid,\n    },\n    options\n  };\n\n  return (\n    <StyledTable marginBottom={marginBottom}>\n      <MemoizedChart chartProps={chartProps} />\n    </StyledTable>\n  );\n}\n\nexport default SampleDataTable;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\n// import ReactGA from 'react-ga4';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n    color: theme.palette.text.secondary,\n    backgroundImage: 'none',\n    backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n    boxShadow: expanded ? theme.shadows : 'none',\n    transition: theme.transitions,\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n    marginTop: expanded ? theme.spacing(3) : 0,\n    flexDirection: 'row-reverse',\n    paddingLeft: expanded ? theme.spacing(1) : 0,\n    '& .MuiTypography-root': {\n        color: theme.palette.text.primary,\n        textDecoration: 'underline',\n        transition: theme.transitions,\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n    const [expanded, setExpanded] = useState(undefined);\n\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : undefined);\n\n        Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n    };\n\n    return (\n        <Box>\n            <StyledAccordion\n                expanded={expanded === \"panel1\"}\n                onChange={handleAccordionChange(\"panel1\")}\n            >\n                <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                    <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"}>\n                        <Typography component=\"a\" variant=\"body1\">\n                            {title}\n                        </Typography>\n                    </Tooltip>\n                </StyledAccordionSummary>\n                <MuiAccordionDetails>\n                    {content}\n                </MuiAccordionDetails>\n            </StyledAccordion>\n        </Box>\n    );\n}\n\nexport default ExpandableSection;\n","// disable eslint for this file\nimport { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Box, Fab, Popover, Typography, Table, TableBody, TableCell, TableHead, TableRow, Stack, styled } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from './Header/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../Utils/Tracking';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n  '& th, td': {\n    fontSize: '0.5em',\n    color: theme.palette.text.primary\n  },\n  '& th': {\n    fontWeight: 500\n  }\n}));\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  // Air quality index legend\n  const theme = useTheme();\n\n  const airQualityIndexCategories = [\n    {\n      name: 'Good',\n      color: theme.palette.chart.optionsColors.aqi[0],\n      aqi: '0 - 50',\n      rawPM2_5: '0 - 12'\n    },\n    {\n      name: 'Moderate',\n      color: theme.palette.chart.optionsColors.aqi[1],\n      aqi: '51 - 100',\n      rawPM2_5: '12.1 - 35.4'\n    },\n    {\n      name: 'Unhealthy for Sensitive Groups',\n      color: theme.palette.chart.optionsColors.aqi[2],\n      aqi: '101 - 150',\n      rawPM2_5: '35.5 - 55.4'\n    },\n    {\n      name: 'Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[3],\n      aqi: '151 - 200',\n      rawPM2_5: '55.5 - 150.4'\n    },\n    {\n      name: 'Very Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[4],\n      aqi: '201 - 300',\n      rawPM2_5: '150.5 - 250.4'\n    },\n    {\n      name: 'Hazardous',\n      color: theme.palette.chart.optionsColors.aqi[5],\n      aqi: '300 - 500',\n      rawPM2_5: '250.5 - 550.5'\n    },\n  ];\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\" triggerThreshold={1.5}>\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopoverOpen}\n          onMouseLeave={handlePopoverClose}\n          onClick={(event) => isMobile && (open ? handlePopoverClose() : handlePopoverOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popover\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: '100',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n          AQI at quick glance\n        </Typography>\n        <StyledTable size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <Stack direction=\"row\" alignItems=\"center\">\n                  <Box sx={{ width: '2em', height: '1em', marginRight: '4px' }} />\n                  Category\n                </Stack>\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">Raw PM2.5 Concentration</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {airQualityIndexCategories.reverse().map((element) => (\n              <TableRow\n                key={element.name}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    <Box sx={{ width: '2em', height: '1em', marginRight: '4px', backgroundColor: element.color }} />\n                    {element.name}\n                  </Stack>\n                </TableCell>\n                <TableCell align=\"right\">{element.aqi}</TableCell>\n                <TableCell align=\"right\">\n                  {element.rawPM2_5}\n                  (µg/m3)\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Popover>\n    </>\n  );\n}\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { Button } from '@mui/material';\nimport LinkIcon from '@mui/icons-material/Link';\nimport * as Tracking from '../../Utils/Tracking';\n\n// Download button: download raw dataset\n\nexport function DatasetDownloadButton({ project }) {\n    const isDisabled = project.sheetId == null ? true : false;\n    return (\n        <Button\n            onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.getDataset);\n            }}\n            href={isDisabled\n                ? ''\n                : `https://docs.google.com/spreadsheets/d/${project.sheetId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            disabled={isDisabled} variant=\"contained\">\n            <LinkIcon />\n            &nbsp;\n            {isDisabled ? 'COMING SOON' : 'FULL DATASET'}\n        </Button>\n    );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport SampleDataTable from '../../Graphs/SampleDataTable';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip, styled } from '@mui/material';\n\nimport GetInTouch from '../Home/GetInTouch';\n\nimport ExpandableSection from './ExpandableSection';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../../Components/AirQualityHelper';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport { DatasetDownloadButton } from './DatasetDownloadButton';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\nimport { SheetsDataContext } from '../../ContextProviders/SheetsDataContext';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n  const commentCount = commentCounts[project.id];\n\n  const [sheetsData] = useContext(SheetsDataContext);\n  const lastUpdate = sheetsData[project.id];\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          {\n            project.id === 'air-quality' && <AirQualityIndexLegendQuickGlance />\n          }\n\n          <FullWidthBox>\n            <Container sx={{ pt: 4, pb: 4 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                <Grid item>\n                  <CustomChip\n                    icon={<PersonIcon />}\n                    label={project.owner}\n                    tooltipTitle=\"Dataset Owner\" />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n\n                {\n                  lastUpdate &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<PublishedWithChangesIcon />}\n                      label={`Last update: ${lastUpdate}`}\n                      tooltipTitle=\"Last Update\" />\n                  </Grid>\n                }\n\n                {commentCount != null &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<CommentIcon />}\n                      label={`${commentCount} Comment${commentCounts[project.id] > 1 ? \"s\" : \"\"}`}\n                      tooltipTitle=\"Number of Comments\"\n                      onClick={() => {\n                        scrollToSection(jsonData.commentSection.id);\n                        Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                          {\n                            destination_id: jsonData.commentSection.id,\n                            destination_label: jsonData.commentSection.toString(),\n                            origin_id: 'chip'\n                          })\n                      }}\n                    />\n                  </Grid>}\n              </Grid>\n\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify', pb: 3, mb: 0 }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadButton project={project} />\n\n              <ExpandableSection\n                title=\"Sample Data\"\n                content={\n                  <>\n                    {project.rawDataTables.map((element, index) => (\n                      <SampleDataTable\n                        key={index}\n                        chartData={element}\n                        sheetId={project.sheetId}\n                        marginBottom={(index < project.rawDataTables.length - 1) ? 3 : 1}\n                      />\n                    ))}\n                  </>\n                }\n              />\n            </Container>\n          </FullWidthBox>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <FullWidthBox\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 == 0 ? 'customAlternateBackground' : ''\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n                  <ChartComponent\n                    chartData={{\n                      chartIndex: index,\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                  <Box sx={{ m: 3 }}>\n                    <Typography\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                      sx={{ mb: 2 }}\n                    >\n                      {element.subtitle && parse(element.subtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]]\n                            .subchartSubtitle, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {element.reference && parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].reference &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]].reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                  </Box>\n                </Container>\n              </FullWidthBox>\n            ))}\n          </Box>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </FullWidthBox>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n            <GetInTouch />\n          </FullWidthBox>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["styled","Box","theme","filter","palette","mode","display","justifyContent","marginTop","spacing","height","maxHeight","breakpoints","down","marginLeft","marginRight","text","capitalizePhrase","jsonData","maxWidth","margin","elevation","sx","p","variant","color","parse","replace","replacePlainHTMLWithMuiComponents","mt","textAlign","href","onClick","Tracking","target","rel","size","fontSize","StyledTable","marginBottom","backgroundColor","customBackground","pointerEvents","secondary","customAlternateBackground","fontWeight","borderRightWidth","props","chartData","sheetId","chartProps","chartType","spreadSheetUrl","spreadSheetQueryParameters","headers","query","gid","options","width","sortAscending","frozenColumns","cssClassNames","headerRow","tableRow","oddTableRow","selectedTableRow","hoverTableRow","headerCell","tableCell","MemoizedChart","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","transitions","StyledAccordionSummary","MuiAccordionSummary","flexDirection","paddingLeft","primary","textDecoration","main","panel","title","content","useState","undefined","setExpanded","onChange","event","isExpanded","expandIcon","ExpandMore","id","Tooltip","Typography","component","Table","AirQualityIndexLegendQuickGlance","anchorEl","setAnchorEl","handlePopoverOpen","currentTarget","handlePopoverClose","open","Boolean","useTheme","airQualityIndexCategories","name","chart","optionsColors","aqi","rawPM2_5","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","triggerThreshold","Fab","onMouseEnter","onMouseLeave","isMobile","Stack","direction","alignItems","Air","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","mx","TableHead","TableRow","TableCell","align","TableBody","reverse","map","element","border","scope","DatasetDownloadButton","project","isDisabled","Button","disabled","Link","CustomChip","tooltipTitle","otherProps","Chip","themePreference","useContext","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","loading","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCounts","commentCount","SheetsDataContext","lastUpdate","useEffect","document","chartsTitles","data","temp","i","charts","length","index","chartTitle","chartID","FullWidthBox","Container","pt","pb","UppercaseTitle","Grid","container","item","icon","Person","label","owner","Email","contact","clickable","BarChart","scrollToSection","destination_id","destination_label","origin_id","PublishedWithChanges","Comment","mb","gutterBottom","description","rawDataTables","className","ThemePreferences","ChartComponent","chartIndex","m","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider","CommentSection","pageID","GetInTouch"],"sourceRoot":""}