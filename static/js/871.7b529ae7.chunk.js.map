{"version":3,"file":"static/js/871.7b529ae7.chunk.js","mappings":"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","sources":["Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx"],"sourcesContent":["import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\n      <Stack spacing={3}>\n        {jsonData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n          </Paper>\n        ))}\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","import { Typography, Paper, Box, Button, TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport parse from 'html-react-parser';\nimport SendIcon from '@mui/icons-material/Send';\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\nimport TipsAndUpdatesIcon from '@mui/icons-material/TipsAndUpdates';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nconst googleFormLink = 'https://docs.google.com/forms/d/e/1FAIpQLSenxtTIizWED0PT3hBOn3IU6fwmj4sr1yhjU70mjmK4R-ipsw/';\n\nconst StyledTextField = styled(TextField)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n  '& .MuiInputLabel-root:not(.MuiInputLabel-shrink), textarea': { fontSize: '0.8rem' }\n}));\n\nfunction FeedbackForm() {\n  return (\n    <Box\n      component=\"form\"\n      action={`${googleFormLink}/formResponse`}\n      method=\"get\"\n      target=\"_blank\"\n      // On form submission, wait for 1 second before resetting the form\n      onSubmit={() => setTimeout(() => document.getElementById('feedback-form').reset(), 1000)}\n      id=\"feedback-form\"\n      sx={{\n        mt: 3,\n        '& svg': {\n          verticalAlign: 'middle',\n          mr: 0.5\n        }\n      }}\n    >\n      <StyledTextField\n        label={(\n          <>\n            <AlternateEmailIcon />\n            Your Email\n          </>\n        )}\n        size=\"small\"\n        type=\"email\"\n        variant=\"outlined\"\n        fullWidth\n        name=\"entry.639426313\"\n        required\n      />\n      <StyledTextField\n        label={(\n          <>\n            <DataObjectIcon />\n            Do you have a dataset to contribute?\n          </>\n        )}\n        helperText=\"It should be relevant to the NYU Abu Dhabi campus community, especially on sustainability, well-being, or other quantifiable metrics (i.e. campus operations, consumptions, etc)\"\n        size=\"small\"\n        variant=\"outlined\"\n        fullWidth\n        name=\"entry.746740204\"\n        multiline\n        rows={4}\n      />\n      <StyledTextField\n        label={(\n          <>\n            <TipsAndUpdatesIcon />\n            How can we improve the user experience?\n          </>\n        )}\n        helperText=\"For example: the navigation between pages, the data visualizations, the datasets, or any other user interface elements\"\n        size=\"small\"\n        variant=\"outlined\"\n        fullWidth\n        name=\"entry.1433812927\"\n        multiline\n        rows={4}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        startIcon={<SendIcon />}\n        sx={{\n          '& .MuiButton-startIcon': {\n            mr: 0,\n            '& svg': {\n              verticalAlign: 'middle',\n              fontSize: '0.8rem !important'\n            }\n          }\n        }}\n      >\n        Submit\n      </Button>\n      <Typography\n        variant=\"caption\"\n        component=\"p\"\n        color=\"text.secondary\"\n        sx={{ mt: 0.5, fontStyle: 'italic' }}\n      >\n        By clicking the\n        <b> Submit </b>\n        button, you will be re-directed to Google Form&apos;s post-submission page.\n      </Typography>\n    </Box>\n  );\n}\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n\n      <Box maxWidth=\"lg\" margin=\"auto\">\n        <Paper elevation={2} sx={{ p: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {parse(jsonData.getInTouch.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <FeedbackForm />\n        </Paper>\n      </Box>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Box, Grid, Stack, Typography, Container, Card, CardContent, CardMedia, CardActionArea, Divider, Tooltip, Chip } from '@mui/material';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { DataContext } from '../../ContextProviders/HomePageContext';\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\n// import AtAGlance from './AtAGlance';\nimport About from './About';\nimport GetInTouch from './GetInTouch';\n\nimport jsonData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport LaunchIcon from '@mui/icons-material/Launch';\n\nfunction Home({ themePreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  // useState for home page data\n  // eslint-disable-next-line no-unused-vars\n  const [_, setCurrentPage, __, setChartsTitlesList] = useContext(LinkContext);\n  const [homeData] = useContext(DataContext);\n  const [commentCounts] = useContext(CommentCountsContext);\n\n  // set underline link to home\n  useEffect(() => {\n    setCurrentPage('home');\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  const renderTeaserChartOrEmbeddedWebsite = (project) => {\n    if (project.chart) return project.chart;\n    else if (project.embeddedWebsite) {\n      return (\n        <>\n          <Chip\n            sx={{ position: 'absolute', top: '0.5rem', right: '0.5rem' }}\n            size=\"small\"\n            label=\"EXTERNAL SITE\"\n            icon={<LaunchIcon />}\n            color=\"primary\"\n          />\n          <iframe\n            src={`${project.embeddedWebsite}?themePreference=${themePreference}`}\n            title=\"CITIESair\"\n            style={{\n              width: '100%',\n              height: '98%',\n              border: 'none'\n            }}\n          />\n        </>\n      )\n    }\n  }\n\n  return (\n    <Box width=\"100%\">\n      <FullWidthBox>\n        <Container sx={{ pt: 3, pb: 4 }}>\n          <UppercaseTitle text=\"all projects\" />\n\n          { // Temporary hide AtAGlance until we have higher analytics\n          /* <Box sx={{ pb: 3 }} >\n            <AtAGlance\n              numberOfActiveDataset={\n                (homeData.reduce((count, project) => {\n                  return project.isActive ? count + 1 : count;\n                }, 0))\n              }\n            />\n          </Box> */}\n\n          <Grid container spacing={3} sx={{ justifyContent: { sm: 'center', md: 'start' } }}>\n            {Object.entries(homeData).map(([key, project], index) => (\n              <Grid key={index} item xs={12} sm={9} md={6} lg={4}>\n                <Card elevation={2}>\n                  <CardActionArea\n                    component={project.externalWebsite ? 'a' : Link}\n                    href={project.externalWebsite && project.externalWebsite}\n                    to={project.externalWebsite ? null : `/project/${project.id}`}\n                    target={project.externalWebsite ? '_blank' : ''}\n                    rel={project.externalWebsite ? 'noopener noreferrer' : ''}\n                    disabled={!project.isActive}\n                    onClick={() => {\n                      project.externalWebsite\n                        ? Tracking.sendEventAnalytics(\n                          Tracking.Events.internalNavigation,\n                          {\n                            destination_id: `/project/${project.id}`,\n                            destination_label: project.id,\n                            origin_id: 'home'\n                          }\n                        )\n                        : Tracking.sendEventAnalytics(\n                          Tracking.Events.externalNavigation,\n                          {\n                            destination_link: project.externalWebsite,\n                            origin_id: 'home'\n                          }\n                        )\n                    }}\n                  >\n                    <CardMedia\n                      height=\"auto\"\n                      sx={{ aspectRatio: '4/3', pointerEvents: 'none' }}\n                    >\n                      {renderTeaserChartOrEmbeddedWebsite(project)}\n                    </CardMedia>\n\n                    <Divider />\n                    <CardContent>\n                      <Grid container justifyContent=\"space-between\" alignItems=\"end\">\n                        <Grid item xs={10}>\n                          <Typography\n                            variant=\"body1\"\n                            component=\"div\"\n                            color=\"text.primary\"\n                            fontWeight=\"500\"\n                          >\n                            {project.title}\n                            {\n                              project.embeddedWebsite &&\n                              <LaunchIcon sx={{ fontSize: '1rem', ml: 0.5 }} />\n                            }\n                          </Typography>\n                          <Typography\n                            component=\"div\"\n                            variant=\"caption\"\n                            color=\"text.secondary\"\n                            sx={{\n                              whiteSpace: 'nowrap',\n                              overflow: 'hidden',\n                              textOverflow: 'ellipsis',\n                              pr: 1\n                            }}\n                          >\n                            {project?.owners?.join(', ')}\n                          </Typography>\n                        </Grid>\n                        {\n                          project.isActive\n                          && (\n                            <Grid item xs={2}>\n                              <Stack direction=\"row\" spacing={1.5}>\n                                <Tooltip title=\"Number of Charts\" enterDelay={0} leaveDelay={200}>\n                                  <Stack direction=\"row\" spacing={0.2} alignItems=\"center\">\n                                    <BarChartIcon sx={{ fontSize: '0.75rem', color: 'text.secondary' }} />\n                                    <Typography variant=\"caption\" color=\"text.secondary\">\n                                      {project.chartCounts}\n                                    </Typography>\n                                  </Stack>\n                                </Tooltip>\n                                {(commentCounts[key] != null) && (\n                                  <Tooltip title=\"Number of Comments\" enterDelay={0} leaveDelay={200}>\n                                    <Stack direction=\"row\" spacing={0.2} alignItems=\"center\">\n                                      <CommentIcon sx={{ fontSize: '0.75rem', color: 'text.secondary' }} />\n                                      <Typography variant=\"caption\" color=\"text.secondary\">\n                                        {commentCounts[key]}\n                                      </Typography>\n                                    </Stack>\n                                  </Tooltip>\n                                )}\n                              </Stack>\n                            </Grid>\n                          )\n                        }\n                      </Grid>\n\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <Grid container spacing={3}>\n            <Grid item md={5} id={jsonData.about.id}>\n              <About />\n            </Grid>\n            <Grid item md={7} id={jsonData.getInTouch.id}>\n              <GetInTouch />\n            </Grid>\n          </Grid>\n        </Container>\n      </FullWidthBox>\n    </Box>\n  );\n}\n\nexport default Home;\n"],"names":["UppercaseTitle","text","capitalizePhrase","jsonData","Stack","spacing","element","index","Paper","elevation","sx","p","Typography","variant","color","parse","replace","replacePlainHTMLWithMuiComponents","StyledTextField","styled","TextField","marginBottom","theme","fontSize","FeedbackForm","Box","component","action","method","target","onSubmit","setTimeout","document","getElementById","reset","id","mt","verticalAlign","mr","label","AlternateEmail","size","type","fullWidth","name","required","DataObject","helperText","multiline","rows","TipsAndUpdates","Button","startIcon","Send","fontStyle","maxWidth","margin","themePreference","title","useEffect","useContext","LinkContext","setCurrentPage","setChartsTitlesList","DataContext","homeData","CommentCountsContext","commentCounts","renderTeaserChartOrEmbeddedWebsite","project","chart","embeddedWebsite","Chip","position","top","right","icon","Launch","src","style","width","height","border","FullWidthBox","Container","pt","pb","Grid","container","justifyContent","sm","md","Object","entries","map","key","item","xs","lg","Card","CardActionArea","externalWebsite","Link","href","to","rel","disabled","isActive","onClick","Tracking","destination_id","destination_label","origin_id","destination_link","CardMedia","aspectRatio","pointerEvents","Divider","CardContent","alignItems","fontWeight","ml","whiteSpace","overflow","textOverflow","pr","owners","join","direction","Tooltip","enterDelay","leaveDelay","BarChart","chartCounts","Comment"],"sourceRoot":""}